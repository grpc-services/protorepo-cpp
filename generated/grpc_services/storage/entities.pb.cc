// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc_services/storage/entities.proto

#include "grpc_services/storage/entities.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpc_services {
namespace storage {
constexpr Hashes::Hashes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : crc32_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sha1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , md5_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sha512_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct HashesDefaultTypeInternal {
  constexpr HashesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HashesDefaultTypeInternal() {}
  union {
    Hashes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HashesDefaultTypeInternal _Hashes_default_instance_;
constexpr FolderFacet::FolderFacet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : num_items_(uint64_t{0u}){}
struct FolderFacetDefaultTypeInternal {
  constexpr FolderFacetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FolderFacetDefaultTypeInternal() {}
  union {
    FolderFacet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FolderFacetDefaultTypeInternal _FolderFacet_default_instance_;
constexpr FileFacet::FileFacet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mime_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , hashes_(nullptr)
  , audio_(nullptr)
  , size_(uint64_t{0u}){}
struct FileFacetDefaultTypeInternal {
  constexpr FileFacetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileFacetDefaultTypeInternal() {}
  union {
    FileFacet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileFacetDefaultTypeInternal _FileFacet_default_instance_;
constexpr AudioFacet::AudioFacet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bitrate_(uint64_t{0u})
  , duration_(uint64_t{0u})
  , is_vbr_(false){}
struct AudioFacetDefaultTypeInternal {
  constexpr AudioFacetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AudioFacetDefaultTypeInternal() {}
  union {
    AudioFacet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AudioFacetDefaultTypeInternal _AudioFacet_default_instance_;
constexpr Drive::Drive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , created_time_(nullptr)
  , last_modified_(nullptr)
  , last_item_modified_(nullptr){}
struct DriveDefaultTypeInternal {
  constexpr DriveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DriveDefaultTypeInternal() {}
  union {
    Drive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DriveDefaultTypeInternal _Drive_default_instance_;
constexpr Item::Item(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , parent_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , created_time_(nullptr)
  , last_modified_(nullptr)
  , type_(0)

  , _oneof_case_{}{}
struct ItemDefaultTypeInternal {
  constexpr ItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ItemDefaultTypeInternal() {}
  union {
    Item _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ItemDefaultTypeInternal _Item_default_instance_;
constexpr ItemCreatedEvent::ItemCreatedEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_(nullptr){}
struct ItemCreatedEventDefaultTypeInternal {
  constexpr ItemCreatedEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ItemCreatedEventDefaultTypeInternal() {}
  union {
    ItemCreatedEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ItemCreatedEventDefaultTypeInternal _ItemCreatedEvent_default_instance_;
constexpr ItemRemovedEvent::ItemRemovedEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_(nullptr){}
struct ItemRemovedEventDefaultTypeInternal {
  constexpr ItemRemovedEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ItemRemovedEventDefaultTypeInternal() {}
  union {
    ItemRemovedEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ItemRemovedEventDefaultTypeInternal _ItemRemovedEvent_default_instance_;
constexpr ItemContentUpdatedEvent::ItemContentUpdatedEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_(nullptr){}
struct ItemContentUpdatedEventDefaultTypeInternal {
  constexpr ItemContentUpdatedEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ItemContentUpdatedEventDefaultTypeInternal() {}
  union {
    ItemContentUpdatedEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ItemContentUpdatedEventDefaultTypeInternal _ItemContentUpdatedEvent_default_instance_;
}  // namespace storage
}  // namespace grpc_services
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpc_5fservices_2fstorage_2fentities_2eproto[9];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_grpc_5fservices_2fstorage_2fentities_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpc_5fservices_2fstorage_2fentities_2eproto = nullptr;

const uint32_t TableStruct_grpc_5fservices_2fstorage_2fentities_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Hashes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Hashes, crc32_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Hashes, sha1_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Hashes, md5_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Hashes, sha512_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::FolderFacet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::FolderFacet, num_items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::FileFacet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::FileFacet, hashes_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::FileFacet, mime_type_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::FileFacet, audio_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::FileFacet, size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::AudioFacet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::AudioFacet, bitrate_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::AudioFacet, duration_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::AudioFacet, is_vbr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Drive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Drive, id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Drive, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Drive, description_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Drive, created_time_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Drive, last_modified_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Drive, last_item_modified_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Item, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Item, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Item, id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Item, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Item, description_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Item, created_time_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Item, last_modified_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Item, parent_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Item, type_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::Item, test_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::ItemCreatedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::ItemCreatedEvent, item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::ItemRemovedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::ItemRemovedEvent, item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::ItemContentUpdatedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::ItemContentUpdatedEvent, item_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpc_services::storage::Hashes)},
  { 10, -1, -1, sizeof(::grpc_services::storage::FolderFacet)},
  { 17, -1, -1, sizeof(::grpc_services::storage::FileFacet)},
  { 27, -1, -1, sizeof(::grpc_services::storage::AudioFacet)},
  { 36, -1, -1, sizeof(::grpc_services::storage::Drive)},
  { 48, -1, -1, sizeof(::grpc_services::storage::Item)},
  { 64, -1, -1, sizeof(::grpc_services::storage::ItemCreatedEvent)},
  { 71, -1, -1, sizeof(::grpc_services::storage::ItemRemovedEvent)},
  { 78, -1, -1, sizeof(::grpc_services::storage::ItemContentUpdatedEvent)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_Hashes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_FolderFacet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_FileFacet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_AudioFacet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_Drive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_Item_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_ItemCreatedEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_ItemRemovedEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_ItemContentUpdatedEvent_default_instance_),
};

const char descriptor_table_protodef_grpc_5fservices_2fstorage_2fentities_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$grpc_services/storage/entities.proto\022\025"
  "grpc_services.storage\032$grpc_services/com"
  "mon/Timestamp.proto\"B\n\006Hashes\022\r\n\005crc32\030\001"
  " \001(\t\022\014\n\004sha1\030\002 \001(\t\022\013\n\003md5\030\003 \001(\t\022\016\n\006sha51"
  "2\030\004 \001(\t\" \n\013FolderFacet\022\021\n\tnum_items\030\001 \001("
  "\004\"\215\001\n\tFileFacet\022-\n\006hashes\030\001 \001(\0132\035.grpc_s"
  "ervices.storage.Hashes\022\021\n\tmime_type\030\002 \001("
  "\t\0220\n\005audio\030\003 \001(\0132!.grpc_services.storage"
  ".AudioFacet\022\014\n\004size\030\004 \001(\004\"\?\n\nAudioFacet\022"
  "\017\n\007bitrate\030\001 \001(\004\022\020\n\010duration\030\002 \001(\004\022\016\n\006is"
  "_vbr\030\003 \001(\010\"\342\001\n\005Drive\022\n\n\002id\030\001 \001(\t\022\014\n\004name"
  "\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\0225\n\014created_t"
  "ime\030\004 \001(\0132\037.grpc_services.common.Timesta"
  "mp\0226\n\rlast_modified\030\005 \001(\0132\037.grpc_service"
  "s.common.Timestamp\022;\n\022last_item_modified"
  "\030\006 \001(\0132\037.grpc_services.common.Timestamp\""
  "\333\002\n\004Item\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\023\n\013de"
  "scription\030\003 \001(\t\0225\n\014created_time\030\004 \001(\0132\037."
  "grpc_services.common.Timestamp\0226\n\rlast_m"
  "odified\030\005 \001(\0132\037.grpc_services.common.Tim"
  "estamp\022\021\n\tparent_id\030\006 \001(\t\022-\n\004type\030\007 \001(\0162"
  "\037.grpc_services.storage.ItemType\0220\n\004file"
  "\030\010 \001(\0132 .grpc_services.storage.FileFacet"
  "H\000\0224\n\006folder\030\t \001(\0132\".grpc_services.stora"
  "ge.FolderFacetH\000B\013\n\ttest_type\"=\n\020ItemCre"
  "atedEvent\022)\n\004item\030\001 \001(\0132\033.grpc_services."
  "storage.Item\"=\n\020ItemRemovedEvent\022)\n\004item"
  "\030\001 \001(\0132\033.grpc_services.storage.Item\"D\n\027I"
  "temContentUpdatedEvent\022)\n\004item\030\001 \001(\0132\033.g"
  "rpc_services.storage.Item* \n\010ItemType\022\010\n"
  "\004FILE\020\000\022\n\n\006FOLDER\020\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_deps[1] = {
  &::descriptor_table_grpc_5fservices_2fcommon_2fTimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto = {
  false, false, 1227, descriptor_table_protodef_grpc_5fservices_2fstorage_2fentities_2eproto, "grpc_services/storage/entities.proto", 
  &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_once, descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_deps, 1, 9,
  schemas, file_default_instances, TableStruct_grpc_5fservices_2fstorage_2fentities_2eproto::offsets,
  file_level_metadata_grpc_5fservices_2fstorage_2fentities_2eproto, file_level_enum_descriptors_grpc_5fservices_2fstorage_2fentities_2eproto, file_level_service_descriptors_grpc_5fservices_2fstorage_2fentities_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_getter() {
  return &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpc_5fservices_2fstorage_2fentities_2eproto(&descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto);
namespace grpc_services {
namespace storage {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ItemType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto);
  return file_level_enum_descriptors_grpc_5fservices_2fstorage_2fentities_2eproto[0];
}
bool ItemType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Hashes::_Internal {
 public:
};

Hashes::Hashes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.Hashes)
}
Hashes::Hashes(const Hashes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  crc32_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    crc32_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_crc32().empty()) {
    crc32_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_crc32(), 
      GetArenaForAllocation());
  }
  sha1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sha1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sha1().empty()) {
    sha1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sha1(), 
      GetArenaForAllocation());
  }
  md5_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    md5_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_md5().empty()) {
    md5_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_md5(), 
      GetArenaForAllocation());
  }
  sha512_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sha512_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sha512().empty()) {
    sha512_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sha512(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.Hashes)
}

inline void Hashes::SharedCtor() {
crc32_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  crc32_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sha1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sha1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
md5_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  md5_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sha512_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sha512_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Hashes::~Hashes() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.Hashes)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Hashes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  crc32_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  md5_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha512_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Hashes::ArenaDtor(void* object) {
  Hashes* _this = reinterpret_cast< Hashes* >(object);
  (void)_this;
}
void Hashes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Hashes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Hashes::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.Hashes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crc32_.ClearToEmpty();
  sha1_.ClearToEmpty();
  md5_.ClearToEmpty();
  sha512_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Hashes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string crc32 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_crc32();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.Hashes.crc32"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sha1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_sha1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.Hashes.sha1"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string md5 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_md5();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.Hashes.md5"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sha512 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_sha512();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.Hashes.sha512"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Hashes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.Hashes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string crc32 = 1;
  if (!this->_internal_crc32().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_crc32().data(), static_cast<int>(this->_internal_crc32().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Hashes.crc32");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_crc32(), target);
  }

  // string sha1 = 2;
  if (!this->_internal_sha1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sha1().data(), static_cast<int>(this->_internal_sha1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Hashes.sha1");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sha1(), target);
  }

  // string md5 = 3;
  if (!this->_internal_md5().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_md5().data(), static_cast<int>(this->_internal_md5().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Hashes.md5");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_md5(), target);
  }

  // string sha512 = 4;
  if (!this->_internal_sha512().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sha512().data(), static_cast<int>(this->_internal_sha512().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Hashes.sha512");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sha512(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.Hashes)
  return target;
}

size_t Hashes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.Hashes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string crc32 = 1;
  if (!this->_internal_crc32().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_crc32());
  }

  // string sha1 = 2;
  if (!this->_internal_sha1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sha1());
  }

  // string md5 = 3;
  if (!this->_internal_md5().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_md5());
  }

  // string sha512 = 4;
  if (!this->_internal_sha512().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sha512());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Hashes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Hashes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Hashes::GetClassData() const { return &_class_data_; }

void Hashes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Hashes *>(to)->MergeFrom(
      static_cast<const Hashes &>(from));
}


void Hashes::MergeFrom(const Hashes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.Hashes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_crc32().empty()) {
    _internal_set_crc32(from._internal_crc32());
  }
  if (!from._internal_sha1().empty()) {
    _internal_set_sha1(from._internal_sha1());
  }
  if (!from._internal_md5().empty()) {
    _internal_set_md5(from._internal_md5());
  }
  if (!from._internal_sha512().empty()) {
    _internal_set_sha512(from._internal_sha512());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Hashes::CopyFrom(const Hashes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.Hashes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hashes::IsInitialized() const {
  return true;
}

void Hashes::InternalSwap(Hashes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &crc32_, lhs_arena,
      &other->crc32_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sha1_, lhs_arena,
      &other->sha1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &md5_, lhs_arena,
      &other->md5_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sha512_, lhs_arena,
      &other->sha512_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Hashes::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fentities_2eproto[0]);
}

// ===================================================================

class FolderFacet::_Internal {
 public:
};

FolderFacet::FolderFacet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.FolderFacet)
}
FolderFacet::FolderFacet(const FolderFacet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  num_items_ = from.num_items_;
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.FolderFacet)
}

inline void FolderFacet::SharedCtor() {
num_items_ = uint64_t{0u};
}

FolderFacet::~FolderFacet() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.FolderFacet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FolderFacet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FolderFacet::ArenaDtor(void* object) {
  FolderFacet* _this = reinterpret_cast< FolderFacet* >(object);
  (void)_this;
}
void FolderFacet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FolderFacet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FolderFacet::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.FolderFacet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_items_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FolderFacet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 num_items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          num_items_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FolderFacet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.FolderFacet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 num_items = 1;
  if (this->_internal_num_items() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_num_items(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.FolderFacet)
  return target;
}

size_t FolderFacet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.FolderFacet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 num_items = 1;
  if (this->_internal_num_items() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_num_items());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FolderFacet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FolderFacet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FolderFacet::GetClassData() const { return &_class_data_; }

void FolderFacet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FolderFacet *>(to)->MergeFrom(
      static_cast<const FolderFacet &>(from));
}


void FolderFacet::MergeFrom(const FolderFacet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.FolderFacet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num_items() != 0) {
    _internal_set_num_items(from._internal_num_items());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FolderFacet::CopyFrom(const FolderFacet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.FolderFacet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FolderFacet::IsInitialized() const {
  return true;
}

void FolderFacet::InternalSwap(FolderFacet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(num_items_, other->num_items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FolderFacet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fentities_2eproto[1]);
}

// ===================================================================

class FileFacet::_Internal {
 public:
  static const ::grpc_services::storage::Hashes& hashes(const FileFacet* msg);
  static const ::grpc_services::storage::AudioFacet& audio(const FileFacet* msg);
};

const ::grpc_services::storage::Hashes&
FileFacet::_Internal::hashes(const FileFacet* msg) {
  return *msg->hashes_;
}
const ::grpc_services::storage::AudioFacet&
FileFacet::_Internal::audio(const FileFacet* msg) {
  return *msg->audio_;
}
FileFacet::FileFacet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.FileFacet)
}
FileFacet::FileFacet(const FileFacet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mime_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    mime_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mime_type().empty()) {
    mime_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mime_type(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_hashes()) {
    hashes_ = new ::grpc_services::storage::Hashes(*from.hashes_);
  } else {
    hashes_ = nullptr;
  }
  if (from._internal_has_audio()) {
    audio_ = new ::grpc_services::storage::AudioFacet(*from.audio_);
  } else {
    audio_ = nullptr;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.FileFacet)
}

inline void FileFacet::SharedCtor() {
mime_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  mime_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&hashes_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&hashes_)) + sizeof(size_));
}

FileFacet::~FileFacet() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.FileFacet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FileFacet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  mime_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete hashes_;
  if (this != internal_default_instance()) delete audio_;
}

void FileFacet::ArenaDtor(void* object) {
  FileFacet* _this = reinterpret_cast< FileFacet* >(object);
  (void)_this;
}
void FileFacet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileFacet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileFacet::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.FileFacet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mime_type_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && hashes_ != nullptr) {
    delete hashes_;
  }
  hashes_ = nullptr;
  if (GetArenaForAllocation() == nullptr && audio_ != nullptr) {
    delete audio_;
  }
  audio_ = nullptr;
  size_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileFacet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.Hashes hashes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_hashes(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mime_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mime_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.FileFacet.mime_type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc_services.storage.AudioFacet audio = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileFacet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.FileFacet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Hashes hashes = 1;
  if (this->_internal_has_hashes()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::hashes(this), target, stream);
  }

  // string mime_type = 2;
  if (!this->_internal_mime_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mime_type().data(), static_cast<int>(this->_internal_mime_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.FileFacet.mime_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mime_type(), target);
  }

  // .grpc_services.storage.AudioFacet audio = 3;
  if (this->_internal_has_audio()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::audio(this), target, stream);
  }

  // uint64 size = 4;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.FileFacet)
  return target;
}

size_t FileFacet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.FileFacet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mime_type = 2;
  if (!this->_internal_mime_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mime_type());
  }

  // .grpc_services.storage.Hashes hashes = 1;
  if (this->_internal_has_hashes()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *hashes_);
  }

  // .grpc_services.storage.AudioFacet audio = 3;
  if (this->_internal_has_audio()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *audio_);
  }

  // uint64 size = 4;
  if (this->_internal_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileFacet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileFacet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileFacet::GetClassData() const { return &_class_data_; }

void FileFacet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileFacet *>(to)->MergeFrom(
      static_cast<const FileFacet &>(from));
}


void FileFacet::MergeFrom(const FileFacet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.FileFacet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mime_type().empty()) {
    _internal_set_mime_type(from._internal_mime_type());
  }
  if (from._internal_has_hashes()) {
    _internal_mutable_hashes()->::grpc_services::storage::Hashes::MergeFrom(from._internal_hashes());
  }
  if (from._internal_has_audio()) {
    _internal_mutable_audio()->::grpc_services::storage::AudioFacet::MergeFrom(from._internal_audio());
  }
  if (from._internal_size() != 0) {
    _internal_set_size(from._internal_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileFacet::CopyFrom(const FileFacet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.FileFacet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileFacet::IsInitialized() const {
  return true;
}

void FileFacet::InternalSwap(FileFacet* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &mime_type_, lhs_arena,
      &other->mime_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileFacet, size_)
      + sizeof(FileFacet::size_)
      - PROTOBUF_FIELD_OFFSET(FileFacet, hashes_)>(
          reinterpret_cast<char*>(&hashes_),
          reinterpret_cast<char*>(&other->hashes_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileFacet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fentities_2eproto[2]);
}

// ===================================================================

class AudioFacet::_Internal {
 public:
};

AudioFacet::AudioFacet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.AudioFacet)
}
AudioFacet::AudioFacet(const AudioFacet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&bitrate_, &from.bitrate_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_vbr_) -
    reinterpret_cast<char*>(&bitrate_)) + sizeof(is_vbr_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.AudioFacet)
}

inline void AudioFacet::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&bitrate_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_vbr_) -
    reinterpret_cast<char*>(&bitrate_)) + sizeof(is_vbr_));
}

AudioFacet::~AudioFacet() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.AudioFacet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AudioFacet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AudioFacet::ArenaDtor(void* object) {
  AudioFacet* _this = reinterpret_cast< AudioFacet* >(object);
  (void)_this;
}
void AudioFacet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AudioFacet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AudioFacet::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.AudioFacet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bitrate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_vbr_) -
      reinterpret_cast<char*>(&bitrate_)) + sizeof(is_vbr_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AudioFacet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 bitrate = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          bitrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 duration = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_vbr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          is_vbr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AudioFacet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.AudioFacet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 bitrate = 1;
  if (this->_internal_bitrate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_bitrate(), target);
  }

  // uint64 duration = 2;
  if (this->_internal_duration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_duration(), target);
  }

  // bool is_vbr = 3;
  if (this->_internal_is_vbr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_is_vbr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.AudioFacet)
  return target;
}

size_t AudioFacet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.AudioFacet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 bitrate = 1;
  if (this->_internal_bitrate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_bitrate());
  }

  // uint64 duration = 2;
  if (this->_internal_duration() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_duration());
  }

  // bool is_vbr = 3;
  if (this->_internal_is_vbr() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AudioFacet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AudioFacet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AudioFacet::GetClassData() const { return &_class_data_; }

void AudioFacet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AudioFacet *>(to)->MergeFrom(
      static_cast<const AudioFacet &>(from));
}


void AudioFacet::MergeFrom(const AudioFacet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.AudioFacet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bitrate() != 0) {
    _internal_set_bitrate(from._internal_bitrate());
  }
  if (from._internal_duration() != 0) {
    _internal_set_duration(from._internal_duration());
  }
  if (from._internal_is_vbr() != 0) {
    _internal_set_is_vbr(from._internal_is_vbr());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AudioFacet::CopyFrom(const AudioFacet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.AudioFacet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioFacet::IsInitialized() const {
  return true;
}

void AudioFacet::InternalSwap(AudioFacet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AudioFacet, is_vbr_)
      + sizeof(AudioFacet::is_vbr_)
      - PROTOBUF_FIELD_OFFSET(AudioFacet, bitrate_)>(
          reinterpret_cast<char*>(&bitrate_),
          reinterpret_cast<char*>(&other->bitrate_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AudioFacet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fentities_2eproto[3]);
}

// ===================================================================

class Drive::_Internal {
 public:
  static const ::grpc_services::common::Timestamp& created_time(const Drive* msg);
  static const ::grpc_services::common::Timestamp& last_modified(const Drive* msg);
  static const ::grpc_services::common::Timestamp& last_item_modified(const Drive* msg);
};

const ::grpc_services::common::Timestamp&
Drive::_Internal::created_time(const Drive* msg) {
  return *msg->created_time_;
}
const ::grpc_services::common::Timestamp&
Drive::_Internal::last_modified(const Drive* msg) {
  return *msg->last_modified_;
}
const ::grpc_services::common::Timestamp&
Drive::_Internal::last_item_modified(const Drive* msg) {
  return *msg->last_item_modified_;
}
void Drive::clear_created_time() {
  if (GetArenaForAllocation() == nullptr && created_time_ != nullptr) {
    delete created_time_;
  }
  created_time_ = nullptr;
}
void Drive::clear_last_modified() {
  if (GetArenaForAllocation() == nullptr && last_modified_ != nullptr) {
    delete last_modified_;
  }
  last_modified_ = nullptr;
}
void Drive::clear_last_item_modified() {
  if (GetArenaForAllocation() == nullptr && last_item_modified_ != nullptr) {
    delete last_item_modified_;
  }
  last_item_modified_ = nullptr;
}
Drive::Drive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.Drive)
}
Drive::Drive(const Drive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_time()) {
    created_time_ = new ::grpc_services::common::Timestamp(*from.created_time_);
  } else {
    created_time_ = nullptr;
  }
  if (from._internal_has_last_modified()) {
    last_modified_ = new ::grpc_services::common::Timestamp(*from.last_modified_);
  } else {
    last_modified_ = nullptr;
  }
  if (from._internal_has_last_item_modified()) {
    last_item_modified_ = new ::grpc_services::common::Timestamp(*from.last_item_modified_);
  } else {
    last_item_modified_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.Drive)
}

inline void Drive::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&created_time_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&last_item_modified_) -
    reinterpret_cast<char*>(&created_time_)) + sizeof(last_item_modified_));
}

Drive::~Drive() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.Drive)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Drive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_time_;
  if (this != internal_default_instance()) delete last_modified_;
  if (this != internal_default_instance()) delete last_item_modified_;
}

void Drive::ArenaDtor(void* object) {
  Drive* _this = reinterpret_cast< Drive* >(object);
  (void)_this;
}
void Drive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Drive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Drive::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.Drive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  description_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_time_ != nullptr) {
    delete created_time_;
  }
  created_time_ = nullptr;
  if (GetArenaForAllocation() == nullptr && last_modified_ != nullptr) {
    delete last_modified_;
  }
  last_modified_ = nullptr;
  if (GetArenaForAllocation() == nullptr && last_item_modified_ != nullptr) {
    delete last_item_modified_;
  }
  last_item_modified_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Drive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.Drive.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.Drive.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.Drive.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc_services.common.Timestamp created_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc_services.common.Timestamp last_modified = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_modified(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc_services.common.Timestamp last_item_modified = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_item_modified(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Drive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.Drive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Drive.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Drive.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Drive.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // .grpc_services.common.Timestamp created_time = 4;
  if (this->_internal_has_created_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::created_time(this), target, stream);
  }

  // .grpc_services.common.Timestamp last_modified = 5;
  if (this->_internal_has_last_modified()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::last_modified(this), target, stream);
  }

  // .grpc_services.common.Timestamp last_item_modified = 6;
  if (this->_internal_has_last_item_modified()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::last_item_modified(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.Drive)
  return target;
}

size_t Drive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.Drive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .grpc_services.common.Timestamp created_time = 4;
  if (this->_internal_has_created_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_time_);
  }

  // .grpc_services.common.Timestamp last_modified = 5;
  if (this->_internal_has_last_modified()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_modified_);
  }

  // .grpc_services.common.Timestamp last_item_modified = 6;
  if (this->_internal_has_last_item_modified()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_item_modified_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Drive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Drive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Drive::GetClassData() const { return &_class_data_; }

void Drive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Drive *>(to)->MergeFrom(
      static_cast<const Drive &>(from));
}


void Drive::MergeFrom(const Drive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.Drive)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (from._internal_has_created_time()) {
    _internal_mutable_created_time()->::grpc_services::common::Timestamp::MergeFrom(from._internal_created_time());
  }
  if (from._internal_has_last_modified()) {
    _internal_mutable_last_modified()->::grpc_services::common::Timestamp::MergeFrom(from._internal_last_modified());
  }
  if (from._internal_has_last_item_modified()) {
    _internal_mutable_last_item_modified()->::grpc_services::common::Timestamp::MergeFrom(from._internal_last_item_modified());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Drive::CopyFrom(const Drive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.Drive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Drive::IsInitialized() const {
  return true;
}

void Drive::InternalSwap(Drive* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Drive, last_item_modified_)
      + sizeof(Drive::last_item_modified_)
      - PROTOBUF_FIELD_OFFSET(Drive, created_time_)>(
          reinterpret_cast<char*>(&created_time_),
          reinterpret_cast<char*>(&other->created_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Drive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fentities_2eproto[4]);
}

// ===================================================================

class Item::_Internal {
 public:
  static const ::grpc_services::common::Timestamp& created_time(const Item* msg);
  static const ::grpc_services::common::Timestamp& last_modified(const Item* msg);
  static const ::grpc_services::storage::FileFacet& file(const Item* msg);
  static const ::grpc_services::storage::FolderFacet& folder(const Item* msg);
};

const ::grpc_services::common::Timestamp&
Item::_Internal::created_time(const Item* msg) {
  return *msg->created_time_;
}
const ::grpc_services::common::Timestamp&
Item::_Internal::last_modified(const Item* msg) {
  return *msg->last_modified_;
}
const ::grpc_services::storage::FileFacet&
Item::_Internal::file(const Item* msg) {
  return *msg->test_type_.file_;
}
const ::grpc_services::storage::FolderFacet&
Item::_Internal::folder(const Item* msg) {
  return *msg->test_type_.folder_;
}
void Item::clear_created_time() {
  if (GetArenaForAllocation() == nullptr && created_time_ != nullptr) {
    delete created_time_;
  }
  created_time_ = nullptr;
}
void Item::clear_last_modified() {
  if (GetArenaForAllocation() == nullptr && last_modified_ != nullptr) {
    delete last_modified_;
  }
  last_modified_ = nullptr;
}
void Item::set_allocated_file(::grpc_services::storage::FileFacet* file) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_test_type();
  if (file) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::grpc_services::storage::FileFacet>::GetOwningArena(file);
    if (message_arena != submessage_arena) {
      file = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, file, submessage_arena);
    }
    set_has_file();
    test_type_.file_ = file;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc_services.storage.Item.file)
}
void Item::set_allocated_folder(::grpc_services::storage::FolderFacet* folder) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_test_type();
  if (folder) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::grpc_services::storage::FolderFacet>::GetOwningArena(folder);
    if (message_arena != submessage_arena) {
      folder = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, folder, submessage_arena);
    }
    set_has_folder();
    test_type_.folder_ = folder;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc_services.storage.Item.folder)
}
Item::Item(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.Item)
}
Item::Item(const Item& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  parent_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent_id().empty()) {
    parent_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_time()) {
    created_time_ = new ::grpc_services::common::Timestamp(*from.created_time_);
  } else {
    created_time_ = nullptr;
  }
  if (from._internal_has_last_modified()) {
    last_modified_ = new ::grpc_services::common::Timestamp(*from.last_modified_);
  } else {
    last_modified_ = nullptr;
  }
  type_ = from.type_;
  clear_has_test_type();
  switch (from.test_type_case()) {
    case kFile: {
      _internal_mutable_file()->::grpc_services::storage::FileFacet::MergeFrom(from._internal_file());
      break;
    }
    case kFolder: {
      _internal_mutable_folder()->::grpc_services::storage::FolderFacet::MergeFrom(from._internal_folder());
      break;
    }
    case TEST_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.Item)
}

inline void Item::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
parent_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&created_time_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&created_time_)) + sizeof(type_));
clear_has_test_type();
}

Item::~Item() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.Item)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Item::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parent_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_time_;
  if (this != internal_default_instance()) delete last_modified_;
  if (has_test_type()) {
    clear_test_type();
  }
}

void Item::ArenaDtor(void* object) {
  Item* _this = reinterpret_cast< Item* >(object);
  (void)_this;
}
void Item::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Item::clear_test_type() {
// @@protoc_insertion_point(one_of_clear_start:grpc_services.storage.Item)
  switch (test_type_case()) {
    case kFile: {
      if (GetArenaForAllocation() == nullptr) {
        delete test_type_.file_;
      }
      break;
    }
    case kFolder: {
      if (GetArenaForAllocation() == nullptr) {
        delete test_type_.folder_;
      }
      break;
    }
    case TEST_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TEST_TYPE_NOT_SET;
}


void Item::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.Item)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  description_.ClearToEmpty();
  parent_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_time_ != nullptr) {
    delete created_time_;
  }
  created_time_ = nullptr;
  if (GetArenaForAllocation() == nullptr && last_modified_ != nullptr) {
    delete last_modified_;
  }
  last_modified_ = nullptr;
  type_ = 0;
  clear_test_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Item::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.Item.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.Item.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.Item.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc_services.common.Timestamp created_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc_services.common.Timestamp last_modified = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_modified(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string parent_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_parent_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.Item.parent_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc_services.storage.ItemType type = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::grpc_services::storage::ItemType>(val));
        } else
          goto handle_unusual;
        continue;
      // .grpc_services.storage.FileFacet file = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_file(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc_services.storage.FolderFacet folder = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_folder(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Item::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.Item)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Item.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Item.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Item.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // .grpc_services.common.Timestamp created_time = 4;
  if (this->_internal_has_created_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::created_time(this), target, stream);
  }

  // .grpc_services.common.Timestamp last_modified = 5;
  if (this->_internal_has_last_modified()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::last_modified(this), target, stream);
  }

  // string parent_id = 6;
  if (!this->_internal_parent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_id().data(), static_cast<int>(this->_internal_parent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Item.parent_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_parent_id(), target);
  }

  // .grpc_services.storage.ItemType type = 7;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_type(), target);
  }

  // .grpc_services.storage.FileFacet file = 8;
  if (_internal_has_file()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::file(this), target, stream);
  }

  // .grpc_services.storage.FolderFacet folder = 9;
  if (_internal_has_folder()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::folder(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.Item)
  return target;
}

size_t Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.Item)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string parent_id = 6;
  if (!this->_internal_parent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_id());
  }

  // .grpc_services.common.Timestamp created_time = 4;
  if (this->_internal_has_created_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_time_);
  }

  // .grpc_services.common.Timestamp last_modified = 5;
  if (this->_internal_has_last_modified()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_modified_);
  }

  // .grpc_services.storage.ItemType type = 7;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (test_type_case()) {
    // .grpc_services.storage.FileFacet file = 8;
    case kFile: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *test_type_.file_);
      break;
    }
    // .grpc_services.storage.FolderFacet folder = 9;
    case kFolder: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *test_type_.folder_);
      break;
    }
    case TEST_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Item::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Item::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Item::GetClassData() const { return &_class_data_; }

void Item::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Item *>(to)->MergeFrom(
      static_cast<const Item &>(from));
}


void Item::MergeFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.Item)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_parent_id().empty()) {
    _internal_set_parent_id(from._internal_parent_id());
  }
  if (from._internal_has_created_time()) {
    _internal_mutable_created_time()->::grpc_services::common::Timestamp::MergeFrom(from._internal_created_time());
  }
  if (from._internal_has_last_modified()) {
    _internal_mutable_last_modified()->::grpc_services::common::Timestamp::MergeFrom(from._internal_last_modified());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  switch (from.test_type_case()) {
    case kFile: {
      _internal_mutable_file()->::grpc_services::storage::FileFacet::MergeFrom(from._internal_file());
      break;
    }
    case kFolder: {
      _internal_mutable_folder()->::grpc_services::storage::FolderFacet::MergeFrom(from._internal_folder());
      break;
    }
    case TEST_TYPE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Item::CopyFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item::IsInitialized() const {
  return true;
}

void Item::InternalSwap(Item* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_id_, lhs_arena,
      &other->parent_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Item, type_)
      + sizeof(Item::type_)
      - PROTOBUF_FIELD_OFFSET(Item, created_time_)>(
          reinterpret_cast<char*>(&created_time_),
          reinterpret_cast<char*>(&other->created_time_));
  swap(test_type_, other->test_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Item::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fentities_2eproto[5]);
}

// ===================================================================

class ItemCreatedEvent::_Internal {
 public:
  static const ::grpc_services::storage::Item& item(const ItemCreatedEvent* msg);
};

const ::grpc_services::storage::Item&
ItemCreatedEvent::_Internal::item(const ItemCreatedEvent* msg) {
  return *msg->item_;
}
ItemCreatedEvent::ItemCreatedEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.ItemCreatedEvent)
}
ItemCreatedEvent::ItemCreatedEvent(const ItemCreatedEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.ItemCreatedEvent)
}

inline void ItemCreatedEvent::SharedCtor() {
item_ = nullptr;
}

ItemCreatedEvent::~ItemCreatedEvent() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.ItemCreatedEvent)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ItemCreatedEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete item_;
}

void ItemCreatedEvent::ArenaDtor(void* object) {
  ItemCreatedEvent* _this = reinterpret_cast< ItemCreatedEvent* >(object);
  (void)_this;
}
void ItemCreatedEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ItemCreatedEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ItemCreatedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.ItemCreatedEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ItemCreatedEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.Item item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ItemCreatedEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.ItemCreatedEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::item(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.ItemCreatedEvent)
  return target;
}

size_t ItemCreatedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.ItemCreatedEvent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ItemCreatedEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ItemCreatedEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ItemCreatedEvent::GetClassData() const { return &_class_data_; }

void ItemCreatedEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ItemCreatedEvent *>(to)->MergeFrom(
      static_cast<const ItemCreatedEvent &>(from));
}


void ItemCreatedEvent::MergeFrom(const ItemCreatedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.ItemCreatedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _internal_mutable_item()->::grpc_services::storage::Item::MergeFrom(from._internal_item());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ItemCreatedEvent::CopyFrom(const ItemCreatedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.ItemCreatedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemCreatedEvent::IsInitialized() const {
  return true;
}

void ItemCreatedEvent::InternalSwap(ItemCreatedEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(item_, other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ItemCreatedEvent::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fentities_2eproto[6]);
}

// ===================================================================

class ItemRemovedEvent::_Internal {
 public:
  static const ::grpc_services::storage::Item& item(const ItemRemovedEvent* msg);
};

const ::grpc_services::storage::Item&
ItemRemovedEvent::_Internal::item(const ItemRemovedEvent* msg) {
  return *msg->item_;
}
ItemRemovedEvent::ItemRemovedEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.ItemRemovedEvent)
}
ItemRemovedEvent::ItemRemovedEvent(const ItemRemovedEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.ItemRemovedEvent)
}

inline void ItemRemovedEvent::SharedCtor() {
item_ = nullptr;
}

ItemRemovedEvent::~ItemRemovedEvent() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.ItemRemovedEvent)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ItemRemovedEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete item_;
}

void ItemRemovedEvent::ArenaDtor(void* object) {
  ItemRemovedEvent* _this = reinterpret_cast< ItemRemovedEvent* >(object);
  (void)_this;
}
void ItemRemovedEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ItemRemovedEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ItemRemovedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.ItemRemovedEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ItemRemovedEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.Item item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ItemRemovedEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.ItemRemovedEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::item(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.ItemRemovedEvent)
  return target;
}

size_t ItemRemovedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.ItemRemovedEvent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ItemRemovedEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ItemRemovedEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ItemRemovedEvent::GetClassData() const { return &_class_data_; }

void ItemRemovedEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ItemRemovedEvent *>(to)->MergeFrom(
      static_cast<const ItemRemovedEvent &>(from));
}


void ItemRemovedEvent::MergeFrom(const ItemRemovedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.ItemRemovedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _internal_mutable_item()->::grpc_services::storage::Item::MergeFrom(from._internal_item());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ItemRemovedEvent::CopyFrom(const ItemRemovedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.ItemRemovedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemRemovedEvent::IsInitialized() const {
  return true;
}

void ItemRemovedEvent::InternalSwap(ItemRemovedEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(item_, other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ItemRemovedEvent::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fentities_2eproto[7]);
}

// ===================================================================

class ItemContentUpdatedEvent::_Internal {
 public:
  static const ::grpc_services::storage::Item& item(const ItemContentUpdatedEvent* msg);
};

const ::grpc_services::storage::Item&
ItemContentUpdatedEvent::_Internal::item(const ItemContentUpdatedEvent* msg) {
  return *msg->item_;
}
ItemContentUpdatedEvent::ItemContentUpdatedEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.ItemContentUpdatedEvent)
}
ItemContentUpdatedEvent::ItemContentUpdatedEvent(const ItemContentUpdatedEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.ItemContentUpdatedEvent)
}

inline void ItemContentUpdatedEvent::SharedCtor() {
item_ = nullptr;
}

ItemContentUpdatedEvent::~ItemContentUpdatedEvent() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.ItemContentUpdatedEvent)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ItemContentUpdatedEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete item_;
}

void ItemContentUpdatedEvent::ArenaDtor(void* object) {
  ItemContentUpdatedEvent* _this = reinterpret_cast< ItemContentUpdatedEvent* >(object);
  (void)_this;
}
void ItemContentUpdatedEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ItemContentUpdatedEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ItemContentUpdatedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.ItemContentUpdatedEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ItemContentUpdatedEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.Item item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ItemContentUpdatedEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.ItemContentUpdatedEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::item(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.ItemContentUpdatedEvent)
  return target;
}

size_t ItemContentUpdatedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.ItemContentUpdatedEvent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ItemContentUpdatedEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ItemContentUpdatedEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ItemContentUpdatedEvent::GetClassData() const { return &_class_data_; }

void ItemContentUpdatedEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ItemContentUpdatedEvent *>(to)->MergeFrom(
      static_cast<const ItemContentUpdatedEvent &>(from));
}


void ItemContentUpdatedEvent::MergeFrom(const ItemContentUpdatedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.ItemContentUpdatedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _internal_mutable_item()->::grpc_services::storage::Item::MergeFrom(from._internal_item());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ItemContentUpdatedEvent::CopyFrom(const ItemContentUpdatedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.ItemContentUpdatedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemContentUpdatedEvent::IsInitialized() const {
  return true;
}

void ItemContentUpdatedEvent::InternalSwap(ItemContentUpdatedEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(item_, other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ItemContentUpdatedEvent::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fentities_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace storage
}  // namespace grpc_services
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc_services::storage::Hashes* Arena::CreateMaybeMessage< ::grpc_services::storage::Hashes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::Hashes >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::FolderFacet* Arena::CreateMaybeMessage< ::grpc_services::storage::FolderFacet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::FolderFacet >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::FileFacet* Arena::CreateMaybeMessage< ::grpc_services::storage::FileFacet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::FileFacet >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::AudioFacet* Arena::CreateMaybeMessage< ::grpc_services::storage::AudioFacet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::AudioFacet >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::Drive* Arena::CreateMaybeMessage< ::grpc_services::storage::Drive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::Drive >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::Item* Arena::CreateMaybeMessage< ::grpc_services::storage::Item >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::Item >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::ItemCreatedEvent* Arena::CreateMaybeMessage< ::grpc_services::storage::ItemCreatedEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::ItemCreatedEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::ItemRemovedEvent* Arena::CreateMaybeMessage< ::grpc_services::storage::ItemRemovedEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::ItemRemovedEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::ItemContentUpdatedEvent* Arena::CreateMaybeMessage< ::grpc_services::storage::ItemContentUpdatedEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::ItemContentUpdatedEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
