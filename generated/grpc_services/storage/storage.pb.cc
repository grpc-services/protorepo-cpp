// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc_services/storage/storage.proto

#include "grpc_services/storage/storage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpc_services {
namespace storage {
constexpr GetDriveRequest::GetDriveRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetDriveRequestDefaultTypeInternal {
  constexpr GetDriveRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetDriveRequestDefaultTypeInternal() {}
  union {
    GetDriveRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetDriveRequestDefaultTypeInternal _GetDriveRequest_default_instance_;
constexpr GetDriveResponse::GetDriveResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_(nullptr){}
struct GetDriveResponseDefaultTypeInternal {
  constexpr GetDriveResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetDriveResponseDefaultTypeInternal() {}
  union {
    GetDriveResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetDriveResponseDefaultTypeInternal _GetDriveResponse_default_instance_;
constexpr GetDrivesRequest::GetDrivesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetDrivesRequestDefaultTypeInternal {
  constexpr GetDrivesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetDrivesRequestDefaultTypeInternal() {}
  union {
    GetDrivesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetDrivesRequestDefaultTypeInternal _GetDrivesRequest_default_instance_;
constexpr GetDrivesResponse::GetDrivesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drives_(){}
struct GetDrivesResponseDefaultTypeInternal {
  constexpr GetDrivesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetDrivesResponseDefaultTypeInternal() {}
  union {
    GetDrivesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetDrivesResponseDefaultTypeInternal _GetDrivesResponse_default_instance_;
constexpr GetItemRequest::GetItemRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , item_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetItemRequestDefaultTypeInternal {
  constexpr GetItemRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetItemRequestDefaultTypeInternal() {}
  union {
    GetItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetItemRequestDefaultTypeInternal _GetItemRequest_default_instance_;
constexpr GetItemResponse::GetItemResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_(nullptr){}
struct GetItemResponseDefaultTypeInternal {
  constexpr GetItemResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetItemResponseDefaultTypeInternal() {}
  union {
    GetItemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetItemResponseDefaultTypeInternal _GetItemResponse_default_instance_;
constexpr GetChildrenRequest::GetChildrenRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , item_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , offset_(uint64_t{0u})
  , count_(uint64_t{0u}){}
struct GetChildrenRequestDefaultTypeInternal {
  constexpr GetChildrenRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetChildrenRequestDefaultTypeInternal() {}
  union {
    GetChildrenRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetChildrenRequestDefaultTypeInternal _GetChildrenRequest_default_instance_;
constexpr GetChildrenResponse::GetChildrenResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : children_()
  , offset_(uint64_t{0u})
  , total_(uint64_t{0u}){}
struct GetChildrenResponseDefaultTypeInternal {
  constexpr GetChildrenResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetChildrenResponseDefaultTypeInternal() {}
  union {
    GetChildrenResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetChildrenResponseDefaultTypeInternal _GetChildrenResponse_default_instance_;
constexpr GetContentRequest::GetContentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , item_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , offset_(uint64_t{0u})
  , count_(uint64_t{0u}){}
struct GetContentRequestDefaultTypeInternal {
  constexpr GetContentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetContentRequestDefaultTypeInternal() {}
  union {
    GetContentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetContentRequestDefaultTypeInternal _GetContentRequest_default_instance_;
constexpr GetContentResponse::GetContentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : content_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , offset_(uint64_t{0u})
  , count_(uint64_t{0u})
  , total_size_(uint64_t{0u}){}
struct GetContentResponseDefaultTypeInternal {
  constexpr GetContentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetContentResponseDefaultTypeInternal() {}
  union {
    GetContentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetContentResponseDefaultTypeInternal _GetContentResponse_default_instance_;
constexpr GetContentStreamRequest::GetContentStreamRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , item_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , offset_(uint64_t{0u})
  , count_(uint64_t{0u}){}
struct GetContentStreamRequestDefaultTypeInternal {
  constexpr GetContentStreamRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetContentStreamRequestDefaultTypeInternal() {}
  union {
    GetContentStreamRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetContentStreamRequestDefaultTypeInternal _GetContentStreamRequest_default_instance_;
constexpr GetContentStreamResponse::GetContentStreamResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : content_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , offset_(uint64_t{0u})
  , count_(uint64_t{0u})
  , total_size_(uint64_t{0u}){}
struct GetContentStreamResponseDefaultTypeInternal {
  constexpr GetContentStreamResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetContentStreamResponseDefaultTypeInternal() {}
  union {
    GetContentStreamResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetContentStreamResponseDefaultTypeInternal _GetContentStreamResponse_default_instance_;
constexpr CreateDriveRequest::CreateDriveRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateDriveRequestDefaultTypeInternal {
  constexpr CreateDriveRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateDriveRequestDefaultTypeInternal() {}
  union {
    CreateDriveRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateDriveRequestDefaultTypeInternal _CreateDriveRequest_default_instance_;
constexpr CreateDriveResponse::CreateDriveResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_(nullptr){}
struct CreateDriveResponseDefaultTypeInternal {
  constexpr CreateDriveResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateDriveResponseDefaultTypeInternal() {}
  union {
    CreateDriveResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateDriveResponseDefaultTypeInternal _CreateDriveResponse_default_instance_;
constexpr CreateItemRequest::CreateItemRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , parent_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(0)
{}
struct CreateItemRequestDefaultTypeInternal {
  constexpr CreateItemRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateItemRequestDefaultTypeInternal() {}
  union {
    CreateItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateItemRequestDefaultTypeInternal _CreateItemRequest_default_instance_;
constexpr CreateItemResponse::CreateItemResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_(nullptr){}
struct CreateItemResponseDefaultTypeInternal {
  constexpr CreateItemResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateItemResponseDefaultTypeInternal() {}
  union {
    CreateItemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateItemResponseDefaultTypeInternal _CreateItemResponse_default_instance_;
constexpr PutContentStreamRequest::PutContentStreamRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , item_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , content_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , offset_(uint64_t{0u}){}
struct PutContentStreamRequestDefaultTypeInternal {
  constexpr PutContentStreamRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PutContentStreamRequestDefaultTypeInternal() {}
  union {
    PutContentStreamRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PutContentStreamRequestDefaultTypeInternal _PutContentStreamRequest_default_instance_;
constexpr PutContentStreamResponse::PutContentStreamResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_(nullptr){}
struct PutContentStreamResponseDefaultTypeInternal {
  constexpr PutContentStreamResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PutContentStreamResponseDefaultTypeInternal() {}
  union {
    PutContentStreamResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PutContentStreamResponseDefaultTypeInternal _PutContentStreamResponse_default_instance_;
constexpr TruncateContentRequest::TruncateContentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , item_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , new_length_(uint64_t{0u}){}
struct TruncateContentRequestDefaultTypeInternal {
  constexpr TruncateContentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TruncateContentRequestDefaultTypeInternal() {}
  union {
    TruncateContentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TruncateContentRequestDefaultTypeInternal _TruncateContentRequest_default_instance_;
constexpr TruncateContentResponse::TruncateContentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_(nullptr){}
struct TruncateContentResponseDefaultTypeInternal {
  constexpr TruncateContentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TruncateContentResponseDefaultTypeInternal() {}
  union {
    TruncateContentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TruncateContentResponseDefaultTypeInternal _TruncateContentResponse_default_instance_;
constexpr UpdateDriveRequest::UpdateDriveRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_(nullptr){}
struct UpdateDriveRequestDefaultTypeInternal {
  constexpr UpdateDriveRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateDriveRequestDefaultTypeInternal() {}
  union {
    UpdateDriveRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateDriveRequestDefaultTypeInternal _UpdateDriveRequest_default_instance_;
constexpr UpdateDriveResponse::UpdateDriveResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_(nullptr){}
struct UpdateDriveResponseDefaultTypeInternal {
  constexpr UpdateDriveResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateDriveResponseDefaultTypeInternal() {}
  union {
    UpdateDriveResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateDriveResponseDefaultTypeInternal _UpdateDriveResponse_default_instance_;
constexpr UpdateItemRequest::UpdateItemRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , item_(nullptr){}
struct UpdateItemRequestDefaultTypeInternal {
  constexpr UpdateItemRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateItemRequestDefaultTypeInternal() {}
  union {
    UpdateItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateItemRequestDefaultTypeInternal _UpdateItemRequest_default_instance_;
constexpr UpdateItemResponse::UpdateItemResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : item_(nullptr){}
struct UpdateItemResponseDefaultTypeInternal {
  constexpr UpdateItemResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateItemResponseDefaultTypeInternal() {}
  union {
    UpdateItemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateItemResponseDefaultTypeInternal _UpdateItemResponse_default_instance_;
constexpr RemoveDriveRequest::RemoveDriveRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveDriveRequestDefaultTypeInternal {
  constexpr RemoveDriveRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveDriveRequestDefaultTypeInternal() {}
  union {
    RemoveDriveRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveDriveRequestDefaultTypeInternal _RemoveDriveRequest_default_instance_;
constexpr RemoveDriveResponse::RemoveDriveResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct RemoveDriveResponseDefaultTypeInternal {
  constexpr RemoveDriveResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveDriveResponseDefaultTypeInternal() {}
  union {
    RemoveDriveResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveDriveResponseDefaultTypeInternal _RemoveDriveResponse_default_instance_;
constexpr RemoveItemRequest::RemoveItemRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , item_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveItemRequestDefaultTypeInternal {
  constexpr RemoveItemRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveItemRequestDefaultTypeInternal() {}
  union {
    RemoveItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveItemRequestDefaultTypeInternal _RemoveItemRequest_default_instance_;
constexpr RemoveItemResponse::RemoveItemResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct RemoveItemResponseDefaultTypeInternal {
  constexpr RemoveItemResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveItemResponseDefaultTypeInternal() {}
  union {
    RemoveItemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveItemResponseDefaultTypeInternal _RemoveItemResponse_default_instance_;
constexpr WatchChangesRequest::WatchChangesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drive_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct WatchChangesRequestDefaultTypeInternal {
  constexpr WatchChangesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WatchChangesRequestDefaultTypeInternal() {}
  union {
    WatchChangesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WatchChangesRequestDefaultTypeInternal _WatchChangesRequest_default_instance_;
constexpr WatchChangesResponse::WatchChangesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct WatchChangesResponseDefaultTypeInternal {
  constexpr WatchChangesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WatchChangesResponseDefaultTypeInternal() {}
  union {
    WatchChangesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WatchChangesResponseDefaultTypeInternal _WatchChangesResponse_default_instance_;
}  // namespace storage
}  // namespace grpc_services
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[30];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpc_5fservices_2fstorage_2fstorage_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpc_5fservices_2fstorage_2fstorage_2eproto = nullptr;

const uint32_t TableStruct_grpc_5fservices_2fstorage_2fstorage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetDriveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetDriveRequest, drive_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetDriveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetDriveResponse, drive_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetDrivesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetDrivesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetDrivesResponse, drives_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetItemRequest, drive_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetItemRequest, item_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetItemResponse, item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetChildrenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetChildrenRequest, drive_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetChildrenRequest, item_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetChildrenRequest, offset_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetChildrenRequest, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetChildrenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetChildrenResponse, offset_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetChildrenResponse, total_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetChildrenResponse, children_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentRequest, drive_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentRequest, item_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentRequest, offset_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentRequest, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentResponse, offset_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentResponse, count_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentResponse, total_size_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentResponse, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentStreamRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentStreamRequest, drive_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentStreamRequest, item_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentStreamRequest, offset_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentStreamRequest, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentStreamResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentStreamResponse, offset_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentStreamResponse, count_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentStreamResponse, total_size_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::GetContentStreamResponse, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::CreateDriveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::CreateDriveRequest, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::CreateDriveRequest, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::CreateDriveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::CreateDriveResponse, drive_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::CreateItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::CreateItemRequest, drive_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::CreateItemRequest, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::CreateItemRequest, description_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::CreateItemRequest, parent_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::CreateItemRequest, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::CreateItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::CreateItemResponse, item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::PutContentStreamRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::PutContentStreamRequest, drive_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::PutContentStreamRequest, item_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::PutContentStreamRequest, offset_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::PutContentStreamRequest, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::PutContentStreamResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::PutContentStreamResponse, item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::TruncateContentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::TruncateContentRequest, drive_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::TruncateContentRequest, item_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::TruncateContentRequest, new_length_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::TruncateContentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::TruncateContentResponse, item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::UpdateDriveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::UpdateDriveRequest, drive_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::UpdateDriveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::UpdateDriveResponse, drive_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::UpdateItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::UpdateItemRequest, drive_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::UpdateItemRequest, item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::UpdateItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::UpdateItemResponse, item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::RemoveDriveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::RemoveDriveRequest, drive_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::RemoveDriveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::RemoveItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::RemoveItemRequest, drive_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::RemoveItemRequest, item_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::RemoveItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::WatchChangesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::WatchChangesRequest, drive_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::WatchChangesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::WatchChangesResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::grpc_services::storage::WatchChangesResponse, test_event_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpc_services::storage::GetDriveRequest)},
  { 7, -1, -1, sizeof(::grpc_services::storage::GetDriveResponse)},
  { 14, -1, -1, sizeof(::grpc_services::storage::GetDrivesRequest)},
  { 20, -1, -1, sizeof(::grpc_services::storage::GetDrivesResponse)},
  { 27, -1, -1, sizeof(::grpc_services::storage::GetItemRequest)},
  { 35, -1, -1, sizeof(::grpc_services::storage::GetItemResponse)},
  { 42, -1, -1, sizeof(::grpc_services::storage::GetChildrenRequest)},
  { 52, -1, -1, sizeof(::grpc_services::storage::GetChildrenResponse)},
  { 61, -1, -1, sizeof(::grpc_services::storage::GetContentRequest)},
  { 71, -1, -1, sizeof(::grpc_services::storage::GetContentResponse)},
  { 81, -1, -1, sizeof(::grpc_services::storage::GetContentStreamRequest)},
  { 91, -1, -1, sizeof(::grpc_services::storage::GetContentStreamResponse)},
  { 101, -1, -1, sizeof(::grpc_services::storage::CreateDriveRequest)},
  { 109, -1, -1, sizeof(::grpc_services::storage::CreateDriveResponse)},
  { 116, -1, -1, sizeof(::grpc_services::storage::CreateItemRequest)},
  { 127, -1, -1, sizeof(::grpc_services::storage::CreateItemResponse)},
  { 134, -1, -1, sizeof(::grpc_services::storage::PutContentStreamRequest)},
  { 144, -1, -1, sizeof(::grpc_services::storage::PutContentStreamResponse)},
  { 151, -1, -1, sizeof(::grpc_services::storage::TruncateContentRequest)},
  { 160, -1, -1, sizeof(::grpc_services::storage::TruncateContentResponse)},
  { 167, -1, -1, sizeof(::grpc_services::storage::UpdateDriveRequest)},
  { 174, -1, -1, sizeof(::grpc_services::storage::UpdateDriveResponse)},
  { 181, -1, -1, sizeof(::grpc_services::storage::UpdateItemRequest)},
  { 189, -1, -1, sizeof(::grpc_services::storage::UpdateItemResponse)},
  { 196, -1, -1, sizeof(::grpc_services::storage::RemoveDriveRequest)},
  { 203, -1, -1, sizeof(::grpc_services::storage::RemoveDriveResponse)},
  { 209, -1, -1, sizeof(::grpc_services::storage::RemoveItemRequest)},
  { 217, -1, -1, sizeof(::grpc_services::storage::RemoveItemResponse)},
  { 223, -1, -1, sizeof(::grpc_services::storage::WatchChangesRequest)},
  { 230, -1, -1, sizeof(::grpc_services::storage::WatchChangesResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_GetDriveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_GetDriveResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_GetDrivesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_GetDrivesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_GetItemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_GetItemResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_GetChildrenRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_GetChildrenResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_GetContentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_GetContentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_GetContentStreamRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_GetContentStreamResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_CreateDriveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_CreateDriveResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_CreateItemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_CreateItemResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_PutContentStreamRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_PutContentStreamResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_TruncateContentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_TruncateContentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_UpdateDriveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_UpdateDriveResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_UpdateItemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_UpdateItemResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_RemoveDriveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_RemoveDriveResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_RemoveItemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_RemoveItemResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_WatchChangesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_services::storage::_WatchChangesResponse_default_instance_),
};

const char descriptor_table_protodef_grpc_5fservices_2fstorage_2fstorage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#grpc_services/storage/storage.proto\022\025g"
  "rpc_services.storage\032$grpc_services/stor"
  "age/entities.proto\"#\n\017GetDriveRequest\022\020\n"
  "\010drive_id\030\001 \001(\t\"\?\n\020GetDriveResponse\022+\n\005d"
  "rive\030\001 \001(\0132\034.grpc_services.storage.Drive"
  "\"\022\n\020GetDrivesRequest\"A\n\021GetDrivesRespons"
  "e\022,\n\006drives\030\001 \003(\0132\034.grpc_services.storag"
  "e.Drive\"3\n\016GetItemRequest\022\020\n\010drive_id\030\001 "
  "\001(\t\022\017\n\007item_id\030\002 \001(\t\"<\n\017GetItemResponse\022"
  ")\n\004item\030\001 \001(\0132\033.grpc_services.storage.It"
  "em\"V\n\022GetChildrenRequest\022\020\n\010drive_id\030\001 \001"
  "(\t\022\017\n\007item_id\030\002 \001(\t\022\016\n\006offset\030\003 \001(\004\022\r\n\005c"
  "ount\030\004 \001(\004\"c\n\023GetChildrenResponse\022\016\n\006off"
  "set\030\001 \001(\004\022\r\n\005total\030\002 \001(\004\022-\n\010children\030\003 \003"
  "(\0132\033.grpc_services.storage.Item\"U\n\021GetCo"
  "ntentRequest\022\020\n\010drive_id\030\001 \001(\t\022\017\n\007item_i"
  "d\030\002 \001(\t\022\016\n\006offset\030\003 \001(\004\022\r\n\005count\030\004 \001(\004\"X"
  "\n\022GetContentResponse\022\016\n\006offset\030\001 \001(\004\022\r\n\005"
  "count\030\002 \001(\004\022\022\n\ntotal_size\030\003 \001(\004\022\017\n\007conte"
  "nt\030\004 \001(\014\"[\n\027GetContentStreamRequest\022\020\n\010d"
  "rive_id\030\001 \001(\t\022\017\n\007item_id\030\002 \001(\t\022\016\n\006offset"
  "\030\003 \001(\004\022\r\n\005count\030\004 \001(\004\"^\n\030GetContentStrea"
  "mResponse\022\016\n\006offset\030\001 \001(\004\022\r\n\005count\030\002 \001(\004"
  "\022\022\n\ntotal_size\030\003 \001(\004\022\017\n\007content\030\004 \001(\014\"7\n"
  "\022CreateDriveRequest\022\014\n\004name\030\001 \001(\t\022\023\n\013des"
  "cription\030\002 \001(\t\"B\n\023CreateDriveResponse\022+\n"
  "\005drive\030\001 \001(\0132\034.grpc_services.storage.Dri"
  "ve\"\212\001\n\021CreateItemRequest\022\020\n\010drive_id\030\001 \001"
  "(\t\022\014\n\004name\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\021\n"
  "\tparent_id\030\004 \001(\t\022-\n\004type\030\005 \001(\0162\037.grpc_se"
  "rvices.storage.ItemType\"\?\n\022CreateItemRes"
  "ponse\022)\n\004item\030\001 \001(\0132\033.grpc_services.stor"
  "age.Item\"]\n\027PutContentStreamRequest\022\020\n\010d"
  "rive_id\030\001 \001(\t\022\017\n\007item_id\030\002 \001(\t\022\016\n\006offset"
  "\030\003 \001(\004\022\017\n\007content\030\004 \001(\014\"E\n\030PutContentStr"
  "eamResponse\022)\n\004item\030\001 \001(\0132\033.grpc_service"
  "s.storage.Item\"O\n\026TruncateContentRequest"
  "\022\020\n\010drive_id\030\001 \001(\t\022\017\n\007item_id\030\002 \001(\t\022\022\n\nn"
  "ew_length\030\003 \001(\004\"D\n\027TruncateContentRespon"
  "se\022)\n\004item\030\001 \001(\0132\033.grpc_services.storage"
  ".Item\"A\n\022UpdateDriveRequest\022+\n\005drive\030\001 \001"
  "(\0132\034.grpc_services.storage.Drive\"B\n\023Upda"
  "teDriveResponse\022+\n\005drive\030\001 \001(\0132\034.grpc_se"
  "rvices.storage.Drive\"M\n\021UpdateItemReques"
  "t\022\r\n\005drive\030\001 \001(\t\022)\n\004item\030\002 \001(\0132\033.grpc_se"
  "rvices.storage.Item\"\?\n\022UpdateItemRespons"
  "e\022)\n\004item\030\001 \001(\0132\033.grpc_services.storage."
  "Item\"&\n\022RemoveDriveRequest\022\020\n\010drive_id\030\001"
  " \001(\t\"\025\n\023RemoveDriveResponse\"6\n\021RemoveIte"
  "mRequest\022\020\n\010drive_id\030\001 \001(\t\022\017\n\007item_id\030\002 "
  "\001(\t\"\024\n\022RemoveItemResponse\"\'\n\023WatchChange"
  "sRequest\022\020\n\010drive_id\030\001 \001(\t\"\337\001\n\024WatchChan"
  "gesResponse\022:\n\007created\030\001 \001(\0132\'.grpc_serv"
  "ices.storage.ItemCreatedEventH\000\022:\n\007remov"
  "ed\030\002 \001(\0132\'.grpc_services.storage.ItemRem"
  "ovedEventH\000\022A\n\007updated\030\003 \001(\0132..grpc_serv"
  "ices.storage.ItemContentUpdatedEventH\000B\014"
  "\n\ntest_event2\226\014\n\016StorageService\022[\n\010GetDr"
  "ive\022&.grpc_services.storage.GetDriveRequ"
  "est\032\'.grpc_services.storage.GetDriveResp"
  "onse\022^\n\tGetDrives\022\'.grpc_services.storag"
  "e.GetDrivesRequest\032(.grpc_services.stora"
  "ge.GetDrivesResponse\022X\n\007GetItem\022%.grpc_s"
  "ervices.storage.GetItemRequest\032&.grpc_se"
  "rvices.storage.GetItemResponse\022d\n\013GetChi"
  "ldren\022).grpc_services.storage.GetChildre"
  "nRequest\032*.grpc_services.storage.GetChil"
  "drenResponse\022a\n\nGetContent\022(.grpc_servic"
  "es.storage.GetContentRequest\032).grpc_serv"
  "ices.storage.GetContentResponse\022u\n\020GetCo"
  "ntentStream\022..grpc_services.storage.GetC"
  "ontentStreamRequest\032/.grpc_services.stor"
  "age.GetContentStreamResponse0\001\022d\n\013Create"
  "Drive\022).grpc_services.storage.CreateDriv"
  "eRequest\032*.grpc_services.storage.CreateD"
  "riveResponse\022a\n\nCreateItem\022(.grpc_servic"
  "es.storage.CreateItemRequest\032).grpc_serv"
  "ices.storage.CreateItemResponse\022u\n\020PutCo"
  "ntentStream\022..grpc_services.storage.PutC"
  "ontentStreamRequest\032/.grpc_services.stor"
  "age.PutContentStreamResponse(\001\022p\n\017Trunca"
  "teContent\022-.grpc_services.storage.Trunca"
  "teContentRequest\032..grpc_services.storage"
  ".TruncateContentResponse\022d\n\013UpdateDrive\022"
  ").grpc_services.storage.UpdateDriveReque"
  "st\032*.grpc_services.storage.UpdateDriveRe"
  "sponse\022a\n\nUpdateItem\022(.grpc_services.sto"
  "rage.UpdateItemRequest\032).grpc_services.s"
  "torage.UpdateItemResponse\022d\n\013RemoveDrive"
  "\022).grpc_services.storage.RemoveDriveRequ"
  "est\032*.grpc_services.storage.RemoveDriveR"
  "esponse\022a\n\nRemoveItem\022(.grpc_services.st"
  "orage.RemoveItemRequest\032).grpc_services."
  "storage.RemoveItemResponse\022i\n\014WatchChang"
  "es\022*.grpc_services.storage.WatchChangesR"
  "equest\032+.grpc_services.storage.WatchChan"
  "gesResponse0\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_deps[1] = {
  &::descriptor_table_grpc_5fservices_2fstorage_2fentities_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto = {
  false, false, 3861, descriptor_table_protodef_grpc_5fservices_2fstorage_2fstorage_2eproto, "grpc_services/storage/storage.proto", 
  &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once, descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_deps, 1, 30,
  schemas, file_default_instances, TableStruct_grpc_5fservices_2fstorage_2fstorage_2eproto::offsets,
  file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto, file_level_enum_descriptors_grpc_5fservices_2fstorage_2fstorage_2eproto, file_level_service_descriptors_grpc_5fservices_2fstorage_2fstorage_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter() {
  return &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpc_5fservices_2fstorage_2fstorage_2eproto(&descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto);
namespace grpc_services {
namespace storage {

// ===================================================================

class GetDriveRequest::_Internal {
 public:
};

GetDriveRequest::GetDriveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.GetDriveRequest)
}
GetDriveRequest::GetDriveRequest(const GetDriveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_drive_id().empty()) {
    drive_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_drive_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetDriveRequest)
}

inline void GetDriveRequest::SharedCtor() {
drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetDriveRequest::~GetDriveRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetDriveRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetDriveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  drive_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetDriveRequest::ArenaDtor(void* object) {
  GetDriveRequest* _this = reinterpret_cast< GetDriveRequest* >(object);
  (void)_this;
}
void GetDriveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDriveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetDriveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetDriveRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDriveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string drive_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_drive_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.GetDriveRequest.drive_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDriveRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetDriveRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_drive_id().data(), static_cast<int>(this->_internal_drive_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetDriveRequest.drive_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_drive_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetDriveRequest)
  return target;
}

size_t GetDriveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetDriveRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_drive_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDriveRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetDriveRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDriveRequest::GetClassData() const { return &_class_data_; }

void GetDriveRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetDriveRequest *>(to)->MergeFrom(
      static_cast<const GetDriveRequest &>(from));
}


void GetDriveRequest::MergeFrom(const GetDriveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetDriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_drive_id().empty()) {
    _internal_set_drive_id(from._internal_drive_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDriveRequest::CopyFrom(const GetDriveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetDriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDriveRequest::IsInitialized() const {
  return true;
}

void GetDriveRequest::InternalSwap(GetDriveRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &drive_id_, lhs_arena,
      &other->drive_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDriveRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[0]);
}

// ===================================================================

class GetDriveResponse::_Internal {
 public:
  static const ::grpc_services::storage::Drive& drive(const GetDriveResponse* msg);
};

const ::grpc_services::storage::Drive&
GetDriveResponse::_Internal::drive(const GetDriveResponse* msg) {
  return *msg->drive_;
}
void GetDriveResponse::clear_drive() {
  if (GetArenaForAllocation() == nullptr && drive_ != nullptr) {
    delete drive_;
  }
  drive_ = nullptr;
}
GetDriveResponse::GetDriveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.GetDriveResponse)
}
GetDriveResponse::GetDriveResponse(const GetDriveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_drive()) {
    drive_ = new ::grpc_services::storage::Drive(*from.drive_);
  } else {
    drive_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetDriveResponse)
}

inline void GetDriveResponse::SharedCtor() {
drive_ = nullptr;
}

GetDriveResponse::~GetDriveResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetDriveResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetDriveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete drive_;
}

void GetDriveResponse::ArenaDtor(void* object) {
  GetDriveResponse* _this = reinterpret_cast< GetDriveResponse* >(object);
  (void)_this;
}
void GetDriveResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDriveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetDriveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetDriveResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && drive_ != nullptr) {
    delete drive_;
  }
  drive_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDriveResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.Drive drive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_drive(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDriveResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetDriveResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->_internal_has_drive()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::drive(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetDriveResponse)
  return target;
}

size_t GetDriveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetDriveResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->_internal_has_drive()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *drive_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDriveResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetDriveResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDriveResponse::GetClassData() const { return &_class_data_; }

void GetDriveResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetDriveResponse *>(to)->MergeFrom(
      static_cast<const GetDriveResponse &>(from));
}


void GetDriveResponse::MergeFrom(const GetDriveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetDriveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_drive()) {
    _internal_mutable_drive()->::grpc_services::storage::Drive::MergeFrom(from._internal_drive());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDriveResponse::CopyFrom(const GetDriveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetDriveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDriveResponse::IsInitialized() const {
  return true;
}

void GetDriveResponse::InternalSwap(GetDriveResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(drive_, other->drive_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDriveResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[1]);
}

// ===================================================================

class GetDrivesRequest::_Internal {
 public:
};

GetDrivesRequest::GetDrivesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.GetDrivesRequest)
}
GetDrivesRequest::GetDrivesRequest(const GetDrivesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetDrivesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDrivesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDrivesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetDrivesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[2]);
}

// ===================================================================

class GetDrivesResponse::_Internal {
 public:
};

void GetDrivesResponse::clear_drives() {
  drives_.Clear();
}
GetDrivesResponse::GetDrivesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  drives_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.GetDrivesResponse)
}
GetDrivesResponse::GetDrivesResponse(const GetDrivesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      drives_(from.drives_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetDrivesResponse)
}

inline void GetDrivesResponse::SharedCtor() {
}

GetDrivesResponse::~GetDrivesResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetDrivesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetDrivesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetDrivesResponse::ArenaDtor(void* object) {
  GetDrivesResponse* _this = reinterpret_cast< GetDrivesResponse* >(object);
  (void)_this;
}
void GetDrivesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDrivesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetDrivesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetDrivesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drives_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDrivesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .grpc_services.storage.Drive drives = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_drives(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDrivesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetDrivesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_services.storage.Drive drives = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_drives_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_drives(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetDrivesResponse)
  return target;
}

size_t GetDrivesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetDrivesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_services.storage.Drive drives = 1;
  total_size += 1UL * this->_internal_drives_size();
  for (const auto& msg : this->drives_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDrivesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetDrivesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDrivesResponse::GetClassData() const { return &_class_data_; }

void GetDrivesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetDrivesResponse *>(to)->MergeFrom(
      static_cast<const GetDrivesResponse &>(from));
}


void GetDrivesResponse::MergeFrom(const GetDrivesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetDrivesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  drives_.MergeFrom(from.drives_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDrivesResponse::CopyFrom(const GetDrivesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetDrivesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDrivesResponse::IsInitialized() const {
  return true;
}

void GetDrivesResponse::InternalSwap(GetDrivesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  drives_.InternalSwap(&other->drives_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDrivesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[3]);
}

// ===================================================================

class GetItemRequest::_Internal {
 public:
};

GetItemRequest::GetItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.GetItemRequest)
}
GetItemRequest::GetItemRequest(const GetItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_drive_id().empty()) {
    drive_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_drive_id(), 
      GetArenaForAllocation());
  }
  item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    item_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_item_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetItemRequest)
}

inline void GetItemRequest::SharedCtor() {
drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetItemRequest::~GetItemRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetItemRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  drive_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetItemRequest::ArenaDtor(void* object) {
  GetItemRequest* _this = reinterpret_cast< GetItemRequest* >(object);
  (void)_this;
}
void GetItemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetItemRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmpty();
  item_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetItemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string drive_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_drive_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.GetItemRequest.drive_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_item_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.GetItemRequest.item_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetItemRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetItemRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_drive_id().data(), static_cast<int>(this->_internal_drive_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetItemRequest.drive_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_drive_id(), target);
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetItemRequest.item_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetItemRequest)
  return target;
}

size_t GetItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetItemRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_drive_id());
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetItemRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetItemRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetItemRequest::GetClassData() const { return &_class_data_; }

void GetItemRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetItemRequest *>(to)->MergeFrom(
      static_cast<const GetItemRequest &>(from));
}


void GetItemRequest::MergeFrom(const GetItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_drive_id().empty()) {
    _internal_set_drive_id(from._internal_drive_id());
  }
  if (!from._internal_item_id().empty()) {
    _internal_set_item_id(from._internal_item_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetItemRequest::CopyFrom(const GetItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetItemRequest::IsInitialized() const {
  return true;
}

void GetItemRequest::InternalSwap(GetItemRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &drive_id_, lhs_arena,
      &other->drive_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &item_id_, lhs_arena,
      &other->item_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetItemRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[4]);
}

// ===================================================================

class GetItemResponse::_Internal {
 public:
  static const ::grpc_services::storage::Item& item(const GetItemResponse* msg);
};

const ::grpc_services::storage::Item&
GetItemResponse::_Internal::item(const GetItemResponse* msg) {
  return *msg->item_;
}
void GetItemResponse::clear_item() {
  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
}
GetItemResponse::GetItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.GetItemResponse)
}
GetItemResponse::GetItemResponse(const GetItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetItemResponse)
}

inline void GetItemResponse::SharedCtor() {
item_ = nullptr;
}

GetItemResponse::~GetItemResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetItemResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetItemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete item_;
}

void GetItemResponse::ArenaDtor(void* object) {
  GetItemResponse* _this = reinterpret_cast< GetItemResponse* >(object);
  (void)_this;
}
void GetItemResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetItemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetItemResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetItemResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.Item item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetItemResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetItemResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::item(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetItemResponse)
  return target;
}

size_t GetItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetItemResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetItemResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetItemResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetItemResponse::GetClassData() const { return &_class_data_; }

void GetItemResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetItemResponse *>(to)->MergeFrom(
      static_cast<const GetItemResponse &>(from));
}


void GetItemResponse::MergeFrom(const GetItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _internal_mutable_item()->::grpc_services::storage::Item::MergeFrom(from._internal_item());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetItemResponse::CopyFrom(const GetItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetItemResponse::IsInitialized() const {
  return true;
}

void GetItemResponse::InternalSwap(GetItemResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(item_, other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetItemResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[5]);
}

// ===================================================================

class GetChildrenRequest::_Internal {
 public:
};

GetChildrenRequest::GetChildrenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.GetChildrenRequest)
}
GetChildrenRequest::GetChildrenRequest(const GetChildrenRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_drive_id().empty()) {
    drive_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_drive_id(), 
      GetArenaForAllocation());
  }
  item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    item_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_item_id(), 
      GetArenaForAllocation());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetChildrenRequest)
}

inline void GetChildrenRequest::SharedCtor() {
drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&offset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(count_));
}

GetChildrenRequest::~GetChildrenRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetChildrenRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetChildrenRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  drive_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetChildrenRequest::ArenaDtor(void* object) {
  GetChildrenRequest* _this = reinterpret_cast< GetChildrenRequest* >(object);
  (void)_this;
}
void GetChildrenRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetChildrenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetChildrenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetChildrenRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmpty();
  item_id_.ClearToEmpty();
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetChildrenRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string drive_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_drive_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.GetChildrenRequest.drive_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_item_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.GetChildrenRequest.item_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 offset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetChildrenRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetChildrenRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_drive_id().data(), static_cast<int>(this->_internal_drive_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetChildrenRequest.drive_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_drive_id(), target);
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetChildrenRequest.item_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_item_id(), target);
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_offset(), target);
  }

  // uint64 count = 4;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetChildrenRequest)
  return target;
}

size_t GetChildrenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetChildrenRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_drive_id());
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_offset());
  }

  // uint64 count = 4;
  if (this->_internal_count() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetChildrenRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetChildrenRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetChildrenRequest::GetClassData() const { return &_class_data_; }

void GetChildrenRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetChildrenRequest *>(to)->MergeFrom(
      static_cast<const GetChildrenRequest &>(from));
}


void GetChildrenRequest::MergeFrom(const GetChildrenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetChildrenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_drive_id().empty()) {
    _internal_set_drive_id(from._internal_drive_id());
  }
  if (!from._internal_item_id().empty()) {
    _internal_set_item_id(from._internal_item_id());
  }
  if (from._internal_offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetChildrenRequest::CopyFrom(const GetChildrenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetChildrenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChildrenRequest::IsInitialized() const {
  return true;
}

void GetChildrenRequest::InternalSwap(GetChildrenRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &drive_id_, lhs_arena,
      &other->drive_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &item_id_, lhs_arena,
      &other->item_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetChildrenRequest, count_)
      + sizeof(GetChildrenRequest::count_)
      - PROTOBUF_FIELD_OFFSET(GetChildrenRequest, offset_)>(
          reinterpret_cast<char*>(&offset_),
          reinterpret_cast<char*>(&other->offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetChildrenRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[6]);
}

// ===================================================================

class GetChildrenResponse::_Internal {
 public:
};

void GetChildrenResponse::clear_children() {
  children_.Clear();
}
GetChildrenResponse::GetChildrenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  children_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.GetChildrenResponse)
}
GetChildrenResponse::GetChildrenResponse(const GetChildrenResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      children_(from.children_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(total_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetChildrenResponse)
}

inline void GetChildrenResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&offset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&total_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(total_));
}

GetChildrenResponse::~GetChildrenResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetChildrenResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetChildrenResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetChildrenResponse::ArenaDtor(void* object) {
  GetChildrenResponse* _this = reinterpret_cast< GetChildrenResponse* >(object);
  (void)_this;
}
void GetChildrenResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetChildrenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetChildrenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetChildrenResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(total_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetChildrenResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 offset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 total = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          total_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .grpc_services.storage.Item children = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_children(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetChildrenResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetChildrenResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 offset = 1;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_offset(), target);
  }

  // uint64 total = 2;
  if (this->_internal_total() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_total(), target);
  }

  // repeated .grpc_services.storage.Item children = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_children_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_children(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetChildrenResponse)
  return target;
}

size_t GetChildrenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetChildrenResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_services.storage.Item children = 3;
  total_size += 1UL * this->_internal_children_size();
  for (const auto& msg : this->children_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint64 offset = 1;
  if (this->_internal_offset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_offset());
  }

  // uint64 total = 2;
  if (this->_internal_total() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_total());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetChildrenResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetChildrenResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetChildrenResponse::GetClassData() const { return &_class_data_; }

void GetChildrenResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetChildrenResponse *>(to)->MergeFrom(
      static_cast<const GetChildrenResponse &>(from));
}


void GetChildrenResponse::MergeFrom(const GetChildrenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetChildrenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  if (from._internal_offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from._internal_total() != 0) {
    _internal_set_total(from._internal_total());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetChildrenResponse::CopyFrom(const GetChildrenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetChildrenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChildrenResponse::IsInitialized() const {
  return true;
}

void GetChildrenResponse::InternalSwap(GetChildrenResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  children_.InternalSwap(&other->children_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetChildrenResponse, total_)
      + sizeof(GetChildrenResponse::total_)
      - PROTOBUF_FIELD_OFFSET(GetChildrenResponse, offset_)>(
          reinterpret_cast<char*>(&offset_),
          reinterpret_cast<char*>(&other->offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetChildrenResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[7]);
}

// ===================================================================

class GetContentRequest::_Internal {
 public:
};

GetContentRequest::GetContentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.GetContentRequest)
}
GetContentRequest::GetContentRequest(const GetContentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_drive_id().empty()) {
    drive_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_drive_id(), 
      GetArenaForAllocation());
  }
  item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    item_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_item_id(), 
      GetArenaForAllocation());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetContentRequest)
}

inline void GetContentRequest::SharedCtor() {
drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&offset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(count_));
}

GetContentRequest::~GetContentRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetContentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetContentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  drive_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetContentRequest::ArenaDtor(void* object) {
  GetContentRequest* _this = reinterpret_cast< GetContentRequest* >(object);
  (void)_this;
}
void GetContentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetContentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetContentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetContentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmpty();
  item_id_.ClearToEmpty();
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string drive_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_drive_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.GetContentRequest.drive_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_item_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.GetContentRequest.item_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 offset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetContentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_drive_id().data(), static_cast<int>(this->_internal_drive_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetContentRequest.drive_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_drive_id(), target);
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetContentRequest.item_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_item_id(), target);
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_offset(), target);
  }

  // uint64 count = 4;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetContentRequest)
  return target;
}

size_t GetContentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetContentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_drive_id());
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_offset());
  }

  // uint64 count = 4;
  if (this->_internal_count() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetContentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContentRequest::GetClassData() const { return &_class_data_; }

void GetContentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetContentRequest *>(to)->MergeFrom(
      static_cast<const GetContentRequest &>(from));
}


void GetContentRequest::MergeFrom(const GetContentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetContentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_drive_id().empty()) {
    _internal_set_drive_id(from._internal_drive_id());
  }
  if (!from._internal_item_id().empty()) {
    _internal_set_item_id(from._internal_item_id());
  }
  if (from._internal_offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContentRequest::CopyFrom(const GetContentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetContentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContentRequest::IsInitialized() const {
  return true;
}

void GetContentRequest::InternalSwap(GetContentRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &drive_id_, lhs_arena,
      &other->drive_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &item_id_, lhs_arena,
      &other->item_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetContentRequest, count_)
      + sizeof(GetContentRequest::count_)
      - PROTOBUF_FIELD_OFFSET(GetContentRequest, offset_)>(
          reinterpret_cast<char*>(&offset_),
          reinterpret_cast<char*>(&other->offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[8]);
}

// ===================================================================

class GetContentResponse::_Internal {
 public:
};

GetContentResponse::GetContentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.GetContentResponse)
}
GetContentResponse::GetContentResponse(const GetContentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_content(), 
      GetArenaForAllocation());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(total_size_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetContentResponse)
}

inline void GetContentResponse::SharedCtor() {
content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&offset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&total_size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(total_size_));
}

GetContentResponse::~GetContentResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetContentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetContentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetContentResponse::ArenaDtor(void* object) {
  GetContentResponse* _this = reinterpret_cast< GetContentResponse* >(object);
  (void)_this;
}
void GetContentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetContentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetContentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetContentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmpty();
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(total_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 offset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 total_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          total_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes content = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetContentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 offset = 1;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_offset(), target);
  }

  // uint64 count = 2;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_count(), target);
  }

  // uint64 total_size = 3;
  if (this->_internal_total_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_total_size(), target);
  }

  // bytes content = 4;
  if (!this->_internal_content().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetContentResponse)
  return target;
}

size_t GetContentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetContentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes content = 4;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  // uint64 offset = 1;
  if (this->_internal_offset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_offset());
  }

  // uint64 count = 2;
  if (this->_internal_count() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_count());
  }

  // uint64 total_size = 3;
  if (this->_internal_total_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_total_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetContentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContentResponse::GetClassData() const { return &_class_data_; }

void GetContentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetContentResponse *>(to)->MergeFrom(
      static_cast<const GetContentResponse &>(from));
}


void GetContentResponse::MergeFrom(const GetContentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetContentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _internal_set_content(from._internal_content());
  }
  if (from._internal_offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from._internal_total_size() != 0) {
    _internal_set_total_size(from._internal_total_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContentResponse::CopyFrom(const GetContentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetContentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContentResponse::IsInitialized() const {
  return true;
}

void GetContentResponse::InternalSwap(GetContentResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &content_, lhs_arena,
      &other->content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetContentResponse, total_size_)
      + sizeof(GetContentResponse::total_size_)
      - PROTOBUF_FIELD_OFFSET(GetContentResponse, offset_)>(
          reinterpret_cast<char*>(&offset_),
          reinterpret_cast<char*>(&other->offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[9]);
}

// ===================================================================

class GetContentStreamRequest::_Internal {
 public:
};

GetContentStreamRequest::GetContentStreamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.GetContentStreamRequest)
}
GetContentStreamRequest::GetContentStreamRequest(const GetContentStreamRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_drive_id().empty()) {
    drive_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_drive_id(), 
      GetArenaForAllocation());
  }
  item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    item_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_item_id(), 
      GetArenaForAllocation());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetContentStreamRequest)
}

inline void GetContentStreamRequest::SharedCtor() {
drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&offset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(count_));
}

GetContentStreamRequest::~GetContentStreamRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetContentStreamRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetContentStreamRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  drive_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetContentStreamRequest::ArenaDtor(void* object) {
  GetContentStreamRequest* _this = reinterpret_cast< GetContentStreamRequest* >(object);
  (void)_this;
}
void GetContentStreamRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetContentStreamRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetContentStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetContentStreamRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmpty();
  item_id_.ClearToEmpty();
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContentStreamRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string drive_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_drive_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.GetContentStreamRequest.drive_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_item_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.GetContentStreamRequest.item_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 offset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContentStreamRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetContentStreamRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_drive_id().data(), static_cast<int>(this->_internal_drive_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetContentStreamRequest.drive_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_drive_id(), target);
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetContentStreamRequest.item_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_item_id(), target);
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_offset(), target);
  }

  // uint64 count = 4;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetContentStreamRequest)
  return target;
}

size_t GetContentStreamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetContentStreamRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_drive_id());
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_offset());
  }

  // uint64 count = 4;
  if (this->_internal_count() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContentStreamRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetContentStreamRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContentStreamRequest::GetClassData() const { return &_class_data_; }

void GetContentStreamRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetContentStreamRequest *>(to)->MergeFrom(
      static_cast<const GetContentStreamRequest &>(from));
}


void GetContentStreamRequest::MergeFrom(const GetContentStreamRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetContentStreamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_drive_id().empty()) {
    _internal_set_drive_id(from._internal_drive_id());
  }
  if (!from._internal_item_id().empty()) {
    _internal_set_item_id(from._internal_item_id());
  }
  if (from._internal_offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContentStreamRequest::CopyFrom(const GetContentStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetContentStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContentStreamRequest::IsInitialized() const {
  return true;
}

void GetContentStreamRequest::InternalSwap(GetContentStreamRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &drive_id_, lhs_arena,
      &other->drive_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &item_id_, lhs_arena,
      &other->item_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetContentStreamRequest, count_)
      + sizeof(GetContentStreamRequest::count_)
      - PROTOBUF_FIELD_OFFSET(GetContentStreamRequest, offset_)>(
          reinterpret_cast<char*>(&offset_),
          reinterpret_cast<char*>(&other->offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContentStreamRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[10]);
}

// ===================================================================

class GetContentStreamResponse::_Internal {
 public:
};

GetContentStreamResponse::GetContentStreamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.GetContentStreamResponse)
}
GetContentStreamResponse::GetContentStreamResponse(const GetContentStreamResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_content(), 
      GetArenaForAllocation());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(total_size_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetContentStreamResponse)
}

inline void GetContentStreamResponse::SharedCtor() {
content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&offset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&total_size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(total_size_));
}

GetContentStreamResponse::~GetContentStreamResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetContentStreamResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetContentStreamResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetContentStreamResponse::ArenaDtor(void* object) {
  GetContentStreamResponse* _this = reinterpret_cast< GetContentStreamResponse* >(object);
  (void)_this;
}
void GetContentStreamResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetContentStreamResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetContentStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetContentStreamResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmpty();
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(total_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContentStreamResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 offset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 total_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          total_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes content = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContentStreamResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetContentStreamResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 offset = 1;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_offset(), target);
  }

  // uint64 count = 2;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_count(), target);
  }

  // uint64 total_size = 3;
  if (this->_internal_total_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_total_size(), target);
  }

  // bytes content = 4;
  if (!this->_internal_content().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetContentStreamResponse)
  return target;
}

size_t GetContentStreamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetContentStreamResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes content = 4;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  // uint64 offset = 1;
  if (this->_internal_offset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_offset());
  }

  // uint64 count = 2;
  if (this->_internal_count() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_count());
  }

  // uint64 total_size = 3;
  if (this->_internal_total_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_total_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContentStreamResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetContentStreamResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContentStreamResponse::GetClassData() const { return &_class_data_; }

void GetContentStreamResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetContentStreamResponse *>(to)->MergeFrom(
      static_cast<const GetContentStreamResponse &>(from));
}


void GetContentStreamResponse::MergeFrom(const GetContentStreamResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetContentStreamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _internal_set_content(from._internal_content());
  }
  if (from._internal_offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from._internal_total_size() != 0) {
    _internal_set_total_size(from._internal_total_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContentStreamResponse::CopyFrom(const GetContentStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetContentStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContentStreamResponse::IsInitialized() const {
  return true;
}

void GetContentStreamResponse::InternalSwap(GetContentStreamResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &content_, lhs_arena,
      &other->content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetContentStreamResponse, total_size_)
      + sizeof(GetContentStreamResponse::total_size_)
      - PROTOBUF_FIELD_OFFSET(GetContentStreamResponse, offset_)>(
          reinterpret_cast<char*>(&offset_),
          reinterpret_cast<char*>(&other->offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContentStreamResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[11]);
}

// ===================================================================

class CreateDriveRequest::_Internal {
 public:
};

CreateDriveRequest::CreateDriveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.CreateDriveRequest)
}
CreateDriveRequest::CreateDriveRequest(const CreateDriveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.CreateDriveRequest)
}

inline void CreateDriveRequest::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateDriveRequest::~CreateDriveRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.CreateDriveRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateDriveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateDriveRequest::ArenaDtor(void* object) {
  CreateDriveRequest* _this = reinterpret_cast< CreateDriveRequest* >(object);
  (void)_this;
}
void CreateDriveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateDriveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateDriveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.CreateDriveRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDriveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.CreateDriveRequest.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.CreateDriveRequest.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateDriveRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.CreateDriveRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateDriveRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateDriveRequest.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.CreateDriveRequest)
  return target;
}

size_t CreateDriveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.CreateDriveRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateDriveRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateDriveRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateDriveRequest::GetClassData() const { return &_class_data_; }

void CreateDriveRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateDriveRequest *>(to)->MergeFrom(
      static_cast<const CreateDriveRequest &>(from));
}


void CreateDriveRequest::MergeFrom(const CreateDriveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.CreateDriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDriveRequest::CopyFrom(const CreateDriveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.CreateDriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDriveRequest::IsInitialized() const {
  return true;
}

void CreateDriveRequest::InternalSwap(CreateDriveRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDriveRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[12]);
}

// ===================================================================

class CreateDriveResponse::_Internal {
 public:
  static const ::grpc_services::storage::Drive& drive(const CreateDriveResponse* msg);
};

const ::grpc_services::storage::Drive&
CreateDriveResponse::_Internal::drive(const CreateDriveResponse* msg) {
  return *msg->drive_;
}
void CreateDriveResponse::clear_drive() {
  if (GetArenaForAllocation() == nullptr && drive_ != nullptr) {
    delete drive_;
  }
  drive_ = nullptr;
}
CreateDriveResponse::CreateDriveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.CreateDriveResponse)
}
CreateDriveResponse::CreateDriveResponse(const CreateDriveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_drive()) {
    drive_ = new ::grpc_services::storage::Drive(*from.drive_);
  } else {
    drive_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.CreateDriveResponse)
}

inline void CreateDriveResponse::SharedCtor() {
drive_ = nullptr;
}

CreateDriveResponse::~CreateDriveResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.CreateDriveResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateDriveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete drive_;
}

void CreateDriveResponse::ArenaDtor(void* object) {
  CreateDriveResponse* _this = reinterpret_cast< CreateDriveResponse* >(object);
  (void)_this;
}
void CreateDriveResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateDriveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateDriveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.CreateDriveResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && drive_ != nullptr) {
    delete drive_;
  }
  drive_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDriveResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.Drive drive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_drive(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateDriveResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.CreateDriveResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->_internal_has_drive()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::drive(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.CreateDriveResponse)
  return target;
}

size_t CreateDriveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.CreateDriveResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->_internal_has_drive()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *drive_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateDriveResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateDriveResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateDriveResponse::GetClassData() const { return &_class_data_; }

void CreateDriveResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateDriveResponse *>(to)->MergeFrom(
      static_cast<const CreateDriveResponse &>(from));
}


void CreateDriveResponse::MergeFrom(const CreateDriveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.CreateDriveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_drive()) {
    _internal_mutable_drive()->::grpc_services::storage::Drive::MergeFrom(from._internal_drive());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDriveResponse::CopyFrom(const CreateDriveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.CreateDriveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDriveResponse::IsInitialized() const {
  return true;
}

void CreateDriveResponse::InternalSwap(CreateDriveResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(drive_, other->drive_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDriveResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[13]);
}

// ===================================================================

class CreateItemRequest::_Internal {
 public:
};

CreateItemRequest::CreateItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.CreateItemRequest)
}
CreateItemRequest::CreateItemRequest(const CreateItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_drive_id().empty()) {
    drive_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_drive_id(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  parent_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent_id().empty()) {
    parent_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent_id(), 
      GetArenaForAllocation());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.CreateItemRequest)
}

inline void CreateItemRequest::SharedCtor() {
drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
parent_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_ = 0;
}

CreateItemRequest::~CreateItemRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.CreateItemRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  drive_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parent_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateItemRequest::ArenaDtor(void* object) {
  CreateItemRequest* _this = reinterpret_cast< CreateItemRequest* >(object);
  (void)_this;
}
void CreateItemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.CreateItemRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmpty();
  name_.ClearToEmpty();
  description_.ClearToEmpty();
  parent_id_.ClearToEmpty();
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateItemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string drive_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_drive_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.CreateItemRequest.drive_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.CreateItemRequest.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.CreateItemRequest.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string parent_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_parent_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.CreateItemRequest.parent_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc_services.storage.ItemType type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::grpc_services::storage::ItemType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateItemRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.CreateItemRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_drive_id().data(), static_cast<int>(this->_internal_drive_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateItemRequest.drive_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_drive_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateItemRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateItemRequest.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // string parent_id = 4;
  if (!this->_internal_parent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_id().data(), static_cast<int>(this->_internal_parent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateItemRequest.parent_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_parent_id(), target);
  }

  // .grpc_services.storage.ItemType type = 5;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.CreateItemRequest)
  return target;
}

size_t CreateItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.CreateItemRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_drive_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string parent_id = 4;
  if (!this->_internal_parent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_id());
  }

  // .grpc_services.storage.ItemType type = 5;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateItemRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateItemRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateItemRequest::GetClassData() const { return &_class_data_; }

void CreateItemRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateItemRequest *>(to)->MergeFrom(
      static_cast<const CreateItemRequest &>(from));
}


void CreateItemRequest::MergeFrom(const CreateItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.CreateItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_drive_id().empty()) {
    _internal_set_drive_id(from._internal_drive_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_parent_id().empty()) {
    _internal_set_parent_id(from._internal_parent_id());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateItemRequest::CopyFrom(const CreateItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.CreateItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateItemRequest::IsInitialized() const {
  return true;
}

void CreateItemRequest::InternalSwap(CreateItemRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &drive_id_, lhs_arena,
      &other->drive_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_id_, lhs_arena,
      &other->parent_id_, rhs_arena
  );
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateItemRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[14]);
}

// ===================================================================

class CreateItemResponse::_Internal {
 public:
  static const ::grpc_services::storage::Item& item(const CreateItemResponse* msg);
};

const ::grpc_services::storage::Item&
CreateItemResponse::_Internal::item(const CreateItemResponse* msg) {
  return *msg->item_;
}
void CreateItemResponse::clear_item() {
  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
}
CreateItemResponse::CreateItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.CreateItemResponse)
}
CreateItemResponse::CreateItemResponse(const CreateItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.CreateItemResponse)
}

inline void CreateItemResponse::SharedCtor() {
item_ = nullptr;
}

CreateItemResponse::~CreateItemResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.CreateItemResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateItemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete item_;
}

void CreateItemResponse::ArenaDtor(void* object) {
  CreateItemResponse* _this = reinterpret_cast< CreateItemResponse* >(object);
  (void)_this;
}
void CreateItemResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateItemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.CreateItemResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateItemResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.Item item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateItemResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.CreateItemResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::item(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.CreateItemResponse)
  return target;
}

size_t CreateItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.CreateItemResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateItemResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateItemResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateItemResponse::GetClassData() const { return &_class_data_; }

void CreateItemResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateItemResponse *>(to)->MergeFrom(
      static_cast<const CreateItemResponse &>(from));
}


void CreateItemResponse::MergeFrom(const CreateItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.CreateItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _internal_mutable_item()->::grpc_services::storage::Item::MergeFrom(from._internal_item());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateItemResponse::CopyFrom(const CreateItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.CreateItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateItemResponse::IsInitialized() const {
  return true;
}

void CreateItemResponse::InternalSwap(CreateItemResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(item_, other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateItemResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[15]);
}

// ===================================================================

class PutContentStreamRequest::_Internal {
 public:
};

PutContentStreamRequest::PutContentStreamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.PutContentStreamRequest)
}
PutContentStreamRequest::PutContentStreamRequest(const PutContentStreamRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_drive_id().empty()) {
    drive_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_drive_id(), 
      GetArenaForAllocation());
  }
  item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    item_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_item_id(), 
      GetArenaForAllocation());
  }
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_content(), 
      GetArenaForAllocation());
  }
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.PutContentStreamRequest)
}

inline void PutContentStreamRequest::SharedCtor() {
drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
offset_ = uint64_t{0u};
}

PutContentStreamRequest::~PutContentStreamRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.PutContentStreamRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PutContentStreamRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  drive_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PutContentStreamRequest::ArenaDtor(void* object) {
  PutContentStreamRequest* _this = reinterpret_cast< PutContentStreamRequest* >(object);
  (void)_this;
}
void PutContentStreamRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PutContentStreamRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PutContentStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.PutContentStreamRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmpty();
  item_id_.ClearToEmpty();
  content_.ClearToEmpty();
  offset_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutContentStreamRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string drive_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_drive_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.PutContentStreamRequest.drive_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_item_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.PutContentStreamRequest.item_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 offset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes content = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutContentStreamRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.PutContentStreamRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_drive_id().data(), static_cast<int>(this->_internal_drive_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.PutContentStreamRequest.drive_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_drive_id(), target);
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.PutContentStreamRequest.item_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_item_id(), target);
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_offset(), target);
  }

  // bytes content = 4;
  if (!this->_internal_content().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.PutContentStreamRequest)
  return target;
}

size_t PutContentStreamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.PutContentStreamRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_drive_id());
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  // bytes content = 4;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  // uint64 offset = 3;
  if (this->_internal_offset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_offset());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutContentStreamRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PutContentStreamRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutContentStreamRequest::GetClassData() const { return &_class_data_; }

void PutContentStreamRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PutContentStreamRequest *>(to)->MergeFrom(
      static_cast<const PutContentStreamRequest &>(from));
}


void PutContentStreamRequest::MergeFrom(const PutContentStreamRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.PutContentStreamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_drive_id().empty()) {
    _internal_set_drive_id(from._internal_drive_id());
  }
  if (!from._internal_item_id().empty()) {
    _internal_set_item_id(from._internal_item_id());
  }
  if (!from._internal_content().empty()) {
    _internal_set_content(from._internal_content());
  }
  if (from._internal_offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutContentStreamRequest::CopyFrom(const PutContentStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.PutContentStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutContentStreamRequest::IsInitialized() const {
  return true;
}

void PutContentStreamRequest::InternalSwap(PutContentStreamRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &drive_id_, lhs_arena,
      &other->drive_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &item_id_, lhs_arena,
      &other->item_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &content_, lhs_arena,
      &other->content_, rhs_arena
  );
  swap(offset_, other->offset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutContentStreamRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[16]);
}

// ===================================================================

class PutContentStreamResponse::_Internal {
 public:
  static const ::grpc_services::storage::Item& item(const PutContentStreamResponse* msg);
};

const ::grpc_services::storage::Item&
PutContentStreamResponse::_Internal::item(const PutContentStreamResponse* msg) {
  return *msg->item_;
}
void PutContentStreamResponse::clear_item() {
  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
}
PutContentStreamResponse::PutContentStreamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.PutContentStreamResponse)
}
PutContentStreamResponse::PutContentStreamResponse(const PutContentStreamResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.PutContentStreamResponse)
}

inline void PutContentStreamResponse::SharedCtor() {
item_ = nullptr;
}

PutContentStreamResponse::~PutContentStreamResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.PutContentStreamResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PutContentStreamResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete item_;
}

void PutContentStreamResponse::ArenaDtor(void* object) {
  PutContentStreamResponse* _this = reinterpret_cast< PutContentStreamResponse* >(object);
  (void)_this;
}
void PutContentStreamResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PutContentStreamResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PutContentStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.PutContentStreamResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutContentStreamResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.Item item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutContentStreamResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.PutContentStreamResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::item(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.PutContentStreamResponse)
  return target;
}

size_t PutContentStreamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.PutContentStreamResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutContentStreamResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PutContentStreamResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutContentStreamResponse::GetClassData() const { return &_class_data_; }

void PutContentStreamResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PutContentStreamResponse *>(to)->MergeFrom(
      static_cast<const PutContentStreamResponse &>(from));
}


void PutContentStreamResponse::MergeFrom(const PutContentStreamResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.PutContentStreamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _internal_mutable_item()->::grpc_services::storage::Item::MergeFrom(from._internal_item());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutContentStreamResponse::CopyFrom(const PutContentStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.PutContentStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutContentStreamResponse::IsInitialized() const {
  return true;
}

void PutContentStreamResponse::InternalSwap(PutContentStreamResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(item_, other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutContentStreamResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[17]);
}

// ===================================================================

class TruncateContentRequest::_Internal {
 public:
};

TruncateContentRequest::TruncateContentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.TruncateContentRequest)
}
TruncateContentRequest::TruncateContentRequest(const TruncateContentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_drive_id().empty()) {
    drive_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_drive_id(), 
      GetArenaForAllocation());
  }
  item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    item_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_item_id(), 
      GetArenaForAllocation());
  }
  new_length_ = from.new_length_;
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.TruncateContentRequest)
}

inline void TruncateContentRequest::SharedCtor() {
drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
new_length_ = uint64_t{0u};
}

TruncateContentRequest::~TruncateContentRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.TruncateContentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TruncateContentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  drive_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TruncateContentRequest::ArenaDtor(void* object) {
  TruncateContentRequest* _this = reinterpret_cast< TruncateContentRequest* >(object);
  (void)_this;
}
void TruncateContentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TruncateContentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TruncateContentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.TruncateContentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmpty();
  item_id_.ClearToEmpty();
  new_length_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TruncateContentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string drive_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_drive_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.TruncateContentRequest.drive_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_item_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.TruncateContentRequest.item_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 new_length = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          new_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TruncateContentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.TruncateContentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_drive_id().data(), static_cast<int>(this->_internal_drive_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.TruncateContentRequest.drive_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_drive_id(), target);
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.TruncateContentRequest.item_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_item_id(), target);
  }

  // uint64 new_length = 3;
  if (this->_internal_new_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_new_length(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.TruncateContentRequest)
  return target;
}

size_t TruncateContentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.TruncateContentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_drive_id());
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  // uint64 new_length = 3;
  if (this->_internal_new_length() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_new_length());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TruncateContentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TruncateContentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TruncateContentRequest::GetClassData() const { return &_class_data_; }

void TruncateContentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TruncateContentRequest *>(to)->MergeFrom(
      static_cast<const TruncateContentRequest &>(from));
}


void TruncateContentRequest::MergeFrom(const TruncateContentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.TruncateContentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_drive_id().empty()) {
    _internal_set_drive_id(from._internal_drive_id());
  }
  if (!from._internal_item_id().empty()) {
    _internal_set_item_id(from._internal_item_id());
  }
  if (from._internal_new_length() != 0) {
    _internal_set_new_length(from._internal_new_length());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TruncateContentRequest::CopyFrom(const TruncateContentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.TruncateContentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TruncateContentRequest::IsInitialized() const {
  return true;
}

void TruncateContentRequest::InternalSwap(TruncateContentRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &drive_id_, lhs_arena,
      &other->drive_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &item_id_, lhs_arena,
      &other->item_id_, rhs_arena
  );
  swap(new_length_, other->new_length_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TruncateContentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[18]);
}

// ===================================================================

class TruncateContentResponse::_Internal {
 public:
  static const ::grpc_services::storage::Item& item(const TruncateContentResponse* msg);
};

const ::grpc_services::storage::Item&
TruncateContentResponse::_Internal::item(const TruncateContentResponse* msg) {
  return *msg->item_;
}
void TruncateContentResponse::clear_item() {
  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
}
TruncateContentResponse::TruncateContentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.TruncateContentResponse)
}
TruncateContentResponse::TruncateContentResponse(const TruncateContentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.TruncateContentResponse)
}

inline void TruncateContentResponse::SharedCtor() {
item_ = nullptr;
}

TruncateContentResponse::~TruncateContentResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.TruncateContentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TruncateContentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete item_;
}

void TruncateContentResponse::ArenaDtor(void* object) {
  TruncateContentResponse* _this = reinterpret_cast< TruncateContentResponse* >(object);
  (void)_this;
}
void TruncateContentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TruncateContentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TruncateContentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.TruncateContentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TruncateContentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.Item item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TruncateContentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.TruncateContentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::item(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.TruncateContentResponse)
  return target;
}

size_t TruncateContentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.TruncateContentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TruncateContentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TruncateContentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TruncateContentResponse::GetClassData() const { return &_class_data_; }

void TruncateContentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TruncateContentResponse *>(to)->MergeFrom(
      static_cast<const TruncateContentResponse &>(from));
}


void TruncateContentResponse::MergeFrom(const TruncateContentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.TruncateContentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _internal_mutable_item()->::grpc_services::storage::Item::MergeFrom(from._internal_item());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TruncateContentResponse::CopyFrom(const TruncateContentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.TruncateContentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TruncateContentResponse::IsInitialized() const {
  return true;
}

void TruncateContentResponse::InternalSwap(TruncateContentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(item_, other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TruncateContentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[19]);
}

// ===================================================================

class UpdateDriveRequest::_Internal {
 public:
  static const ::grpc_services::storage::Drive& drive(const UpdateDriveRequest* msg);
};

const ::grpc_services::storage::Drive&
UpdateDriveRequest::_Internal::drive(const UpdateDriveRequest* msg) {
  return *msg->drive_;
}
void UpdateDriveRequest::clear_drive() {
  if (GetArenaForAllocation() == nullptr && drive_ != nullptr) {
    delete drive_;
  }
  drive_ = nullptr;
}
UpdateDriveRequest::UpdateDriveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.UpdateDriveRequest)
}
UpdateDriveRequest::UpdateDriveRequest(const UpdateDriveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_drive()) {
    drive_ = new ::grpc_services::storage::Drive(*from.drive_);
  } else {
    drive_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.UpdateDriveRequest)
}

inline void UpdateDriveRequest::SharedCtor() {
drive_ = nullptr;
}

UpdateDriveRequest::~UpdateDriveRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.UpdateDriveRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateDriveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete drive_;
}

void UpdateDriveRequest::ArenaDtor(void* object) {
  UpdateDriveRequest* _this = reinterpret_cast< UpdateDriveRequest* >(object);
  (void)_this;
}
void UpdateDriveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateDriveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateDriveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.UpdateDriveRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && drive_ != nullptr) {
    delete drive_;
  }
  drive_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateDriveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.Drive drive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_drive(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateDriveRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.UpdateDriveRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->_internal_has_drive()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::drive(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.UpdateDriveRequest)
  return target;
}

size_t UpdateDriveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.UpdateDriveRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->_internal_has_drive()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *drive_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateDriveRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateDriveRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateDriveRequest::GetClassData() const { return &_class_data_; }

void UpdateDriveRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateDriveRequest *>(to)->MergeFrom(
      static_cast<const UpdateDriveRequest &>(from));
}


void UpdateDriveRequest::MergeFrom(const UpdateDriveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.UpdateDriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_drive()) {
    _internal_mutable_drive()->::grpc_services::storage::Drive::MergeFrom(from._internal_drive());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDriveRequest::CopyFrom(const UpdateDriveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.UpdateDriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDriveRequest::IsInitialized() const {
  return true;
}

void UpdateDriveRequest::InternalSwap(UpdateDriveRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(drive_, other->drive_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateDriveRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[20]);
}

// ===================================================================

class UpdateDriveResponse::_Internal {
 public:
  static const ::grpc_services::storage::Drive& drive(const UpdateDriveResponse* msg);
};

const ::grpc_services::storage::Drive&
UpdateDriveResponse::_Internal::drive(const UpdateDriveResponse* msg) {
  return *msg->drive_;
}
void UpdateDriveResponse::clear_drive() {
  if (GetArenaForAllocation() == nullptr && drive_ != nullptr) {
    delete drive_;
  }
  drive_ = nullptr;
}
UpdateDriveResponse::UpdateDriveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.UpdateDriveResponse)
}
UpdateDriveResponse::UpdateDriveResponse(const UpdateDriveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_drive()) {
    drive_ = new ::grpc_services::storage::Drive(*from.drive_);
  } else {
    drive_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.UpdateDriveResponse)
}

inline void UpdateDriveResponse::SharedCtor() {
drive_ = nullptr;
}

UpdateDriveResponse::~UpdateDriveResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.UpdateDriveResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateDriveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete drive_;
}

void UpdateDriveResponse::ArenaDtor(void* object) {
  UpdateDriveResponse* _this = reinterpret_cast< UpdateDriveResponse* >(object);
  (void)_this;
}
void UpdateDriveResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateDriveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateDriveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.UpdateDriveResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && drive_ != nullptr) {
    delete drive_;
  }
  drive_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateDriveResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.Drive drive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_drive(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateDriveResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.UpdateDriveResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->_internal_has_drive()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::drive(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.UpdateDriveResponse)
  return target;
}

size_t UpdateDriveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.UpdateDriveResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->_internal_has_drive()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *drive_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateDriveResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateDriveResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateDriveResponse::GetClassData() const { return &_class_data_; }

void UpdateDriveResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateDriveResponse *>(to)->MergeFrom(
      static_cast<const UpdateDriveResponse &>(from));
}


void UpdateDriveResponse::MergeFrom(const UpdateDriveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.UpdateDriveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_drive()) {
    _internal_mutable_drive()->::grpc_services::storage::Drive::MergeFrom(from._internal_drive());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDriveResponse::CopyFrom(const UpdateDriveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.UpdateDriveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDriveResponse::IsInitialized() const {
  return true;
}

void UpdateDriveResponse::InternalSwap(UpdateDriveResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(drive_, other->drive_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateDriveResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[21]);
}

// ===================================================================

class UpdateItemRequest::_Internal {
 public:
  static const ::grpc_services::storage::Item& item(const UpdateItemRequest* msg);
};

const ::grpc_services::storage::Item&
UpdateItemRequest::_Internal::item(const UpdateItemRequest* msg) {
  return *msg->item_;
}
void UpdateItemRequest::clear_item() {
  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
}
UpdateItemRequest::UpdateItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.UpdateItemRequest)
}
UpdateItemRequest::UpdateItemRequest(const UpdateItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  drive_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    drive_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_drive().empty()) {
    drive_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_drive(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.UpdateItemRequest)
}

inline void UpdateItemRequest::SharedCtor() {
drive_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  drive_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
item_ = nullptr;
}

UpdateItemRequest::~UpdateItemRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.UpdateItemRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  drive_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete item_;
}

void UpdateItemRequest::ArenaDtor(void* object) {
  UpdateItemRequest* _this = reinterpret_cast< UpdateItemRequest* >(object);
  (void)_this;
}
void UpdateItemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.UpdateItemRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateItemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string drive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_drive();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.UpdateItemRequest.drive"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc_services.storage.Item item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateItemRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.UpdateItemRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive = 1;
  if (!this->_internal_drive().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_drive().data(), static_cast<int>(this->_internal_drive().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.UpdateItemRequest.drive");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_drive(), target);
  }

  // .grpc_services.storage.Item item = 2;
  if (this->_internal_has_item()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::item(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.UpdateItemRequest)
  return target;
}

size_t UpdateItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.UpdateItemRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string drive = 1;
  if (!this->_internal_drive().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_drive());
  }

  // .grpc_services.storage.Item item = 2;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateItemRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateItemRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateItemRequest::GetClassData() const { return &_class_data_; }

void UpdateItemRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateItemRequest *>(to)->MergeFrom(
      static_cast<const UpdateItemRequest &>(from));
}


void UpdateItemRequest::MergeFrom(const UpdateItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.UpdateItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_drive().empty()) {
    _internal_set_drive(from._internal_drive());
  }
  if (from._internal_has_item()) {
    _internal_mutable_item()->::grpc_services::storage::Item::MergeFrom(from._internal_item());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateItemRequest::CopyFrom(const UpdateItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.UpdateItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateItemRequest::IsInitialized() const {
  return true;
}

void UpdateItemRequest::InternalSwap(UpdateItemRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &drive_, lhs_arena,
      &other->drive_, rhs_arena
  );
  swap(item_, other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateItemRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[22]);
}

// ===================================================================

class UpdateItemResponse::_Internal {
 public:
  static const ::grpc_services::storage::Item& item(const UpdateItemResponse* msg);
};

const ::grpc_services::storage::Item&
UpdateItemResponse::_Internal::item(const UpdateItemResponse* msg) {
  return *msg->item_;
}
void UpdateItemResponse::clear_item() {
  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
}
UpdateItemResponse::UpdateItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.UpdateItemResponse)
}
UpdateItemResponse::UpdateItemResponse(const UpdateItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.UpdateItemResponse)
}

inline void UpdateItemResponse::SharedCtor() {
item_ = nullptr;
}

UpdateItemResponse::~UpdateItemResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.UpdateItemResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateItemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete item_;
}

void UpdateItemResponse::ArenaDtor(void* object) {
  UpdateItemResponse* _this = reinterpret_cast< UpdateItemResponse* >(object);
  (void)_this;
}
void UpdateItemResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateItemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.UpdateItemResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateItemResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.Item item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateItemResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.UpdateItemResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::item(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.UpdateItemResponse)
  return target;
}

size_t UpdateItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.UpdateItemResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateItemResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateItemResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateItemResponse::GetClassData() const { return &_class_data_; }

void UpdateItemResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateItemResponse *>(to)->MergeFrom(
      static_cast<const UpdateItemResponse &>(from));
}


void UpdateItemResponse::MergeFrom(const UpdateItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.UpdateItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _internal_mutable_item()->::grpc_services::storage::Item::MergeFrom(from._internal_item());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateItemResponse::CopyFrom(const UpdateItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.UpdateItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateItemResponse::IsInitialized() const {
  return true;
}

void UpdateItemResponse::InternalSwap(UpdateItemResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(item_, other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateItemResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[23]);
}

// ===================================================================

class RemoveDriveRequest::_Internal {
 public:
};

RemoveDriveRequest::RemoveDriveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.RemoveDriveRequest)
}
RemoveDriveRequest::RemoveDriveRequest(const RemoveDriveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_drive_id().empty()) {
    drive_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_drive_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.RemoveDriveRequest)
}

inline void RemoveDriveRequest::SharedCtor() {
drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RemoveDriveRequest::~RemoveDriveRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.RemoveDriveRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RemoveDriveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  drive_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveDriveRequest::ArenaDtor(void* object) {
  RemoveDriveRequest* _this = reinterpret_cast< RemoveDriveRequest* >(object);
  (void)_this;
}
void RemoveDriveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveDriveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveDriveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.RemoveDriveRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveDriveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string drive_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_drive_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.RemoveDriveRequest.drive_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveDriveRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.RemoveDriveRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_drive_id().data(), static_cast<int>(this->_internal_drive_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.RemoveDriveRequest.drive_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_drive_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.RemoveDriveRequest)
  return target;
}

size_t RemoveDriveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.RemoveDriveRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_drive_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveDriveRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RemoveDriveRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveDriveRequest::GetClassData() const { return &_class_data_; }

void RemoveDriveRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RemoveDriveRequest *>(to)->MergeFrom(
      static_cast<const RemoveDriveRequest &>(from));
}


void RemoveDriveRequest::MergeFrom(const RemoveDriveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.RemoveDriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_drive_id().empty()) {
    _internal_set_drive_id(from._internal_drive_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveDriveRequest::CopyFrom(const RemoveDriveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.RemoveDriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveDriveRequest::IsInitialized() const {
  return true;
}

void RemoveDriveRequest::InternalSwap(RemoveDriveRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &drive_id_, lhs_arena,
      &other->drive_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveDriveRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[24]);
}

// ===================================================================

class RemoveDriveResponse::_Internal {
 public:
};

RemoveDriveResponse::RemoveDriveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.RemoveDriveResponse)
}
RemoveDriveResponse::RemoveDriveResponse(const RemoveDriveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.RemoveDriveResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveDriveResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveDriveResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveDriveResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[25]);
}

// ===================================================================

class RemoveItemRequest::_Internal {
 public:
};

RemoveItemRequest::RemoveItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.RemoveItemRequest)
}
RemoveItemRequest::RemoveItemRequest(const RemoveItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_drive_id().empty()) {
    drive_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_drive_id(), 
      GetArenaForAllocation());
  }
  item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    item_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_item_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.RemoveItemRequest)
}

inline void RemoveItemRequest::SharedCtor() {
drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
item_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  item_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RemoveItemRequest::~RemoveItemRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.RemoveItemRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RemoveItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  drive_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveItemRequest::ArenaDtor(void* object) {
  RemoveItemRequest* _this = reinterpret_cast< RemoveItemRequest* >(object);
  (void)_this;
}
void RemoveItemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.RemoveItemRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmpty();
  item_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveItemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string drive_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_drive_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.RemoveItemRequest.drive_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_item_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.RemoveItemRequest.item_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveItemRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.RemoveItemRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_drive_id().data(), static_cast<int>(this->_internal_drive_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.RemoveItemRequest.drive_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_drive_id(), target);
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.RemoveItemRequest.item_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.RemoveItemRequest)
  return target;
}

size_t RemoveItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.RemoveItemRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_drive_id());
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveItemRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RemoveItemRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveItemRequest::GetClassData() const { return &_class_data_; }

void RemoveItemRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RemoveItemRequest *>(to)->MergeFrom(
      static_cast<const RemoveItemRequest &>(from));
}


void RemoveItemRequest::MergeFrom(const RemoveItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.RemoveItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_drive_id().empty()) {
    _internal_set_drive_id(from._internal_drive_id());
  }
  if (!from._internal_item_id().empty()) {
    _internal_set_item_id(from._internal_item_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveItemRequest::CopyFrom(const RemoveItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.RemoveItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveItemRequest::IsInitialized() const {
  return true;
}

void RemoveItemRequest::InternalSwap(RemoveItemRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &drive_id_, lhs_arena,
      &other->drive_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &item_id_, lhs_arena,
      &other->item_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveItemRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[26]);
}

// ===================================================================

class RemoveItemResponse::_Internal {
 public:
};

RemoveItemResponse::RemoveItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.RemoveItemResponse)
}
RemoveItemResponse::RemoveItemResponse(const RemoveItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.RemoveItemResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveItemResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveItemResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveItemResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[27]);
}

// ===================================================================

class WatchChangesRequest::_Internal {
 public:
};

WatchChangesRequest::WatchChangesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.WatchChangesRequest)
}
WatchChangesRequest::WatchChangesRequest(const WatchChangesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_drive_id().empty()) {
    drive_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_drive_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.WatchChangesRequest)
}

inline void WatchChangesRequest::SharedCtor() {
drive_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  drive_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WatchChangesRequest::~WatchChangesRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.WatchChangesRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WatchChangesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  drive_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WatchChangesRequest::ArenaDtor(void* object) {
  WatchChangesRequest* _this = reinterpret_cast< WatchChangesRequest* >(object);
  (void)_this;
}
void WatchChangesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WatchChangesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WatchChangesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.WatchChangesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WatchChangesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string drive_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_drive_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_services.storage.WatchChangesRequest.drive_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WatchChangesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.WatchChangesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_drive_id().data(), static_cast<int>(this->_internal_drive_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.WatchChangesRequest.drive_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_drive_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.WatchChangesRequest)
  return target;
}

size_t WatchChangesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.WatchChangesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string drive_id = 1;
  if (!this->_internal_drive_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_drive_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WatchChangesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WatchChangesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WatchChangesRequest::GetClassData() const { return &_class_data_; }

void WatchChangesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WatchChangesRequest *>(to)->MergeFrom(
      static_cast<const WatchChangesRequest &>(from));
}


void WatchChangesRequest::MergeFrom(const WatchChangesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.WatchChangesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_drive_id().empty()) {
    _internal_set_drive_id(from._internal_drive_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WatchChangesRequest::CopyFrom(const WatchChangesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.WatchChangesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchChangesRequest::IsInitialized() const {
  return true;
}

void WatchChangesRequest::InternalSwap(WatchChangesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &drive_id_, lhs_arena,
      &other->drive_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata WatchChangesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[28]);
}

// ===================================================================

class WatchChangesResponse::_Internal {
 public:
  static const ::grpc_services::storage::ItemCreatedEvent& created(const WatchChangesResponse* msg);
  static const ::grpc_services::storage::ItemRemovedEvent& removed(const WatchChangesResponse* msg);
  static const ::grpc_services::storage::ItemContentUpdatedEvent& updated(const WatchChangesResponse* msg);
};

const ::grpc_services::storage::ItemCreatedEvent&
WatchChangesResponse::_Internal::created(const WatchChangesResponse* msg) {
  return *msg->test_event_.created_;
}
const ::grpc_services::storage::ItemRemovedEvent&
WatchChangesResponse::_Internal::removed(const WatchChangesResponse* msg) {
  return *msg->test_event_.removed_;
}
const ::grpc_services::storage::ItemContentUpdatedEvent&
WatchChangesResponse::_Internal::updated(const WatchChangesResponse* msg) {
  return *msg->test_event_.updated_;
}
void WatchChangesResponse::set_allocated_created(::grpc_services::storage::ItemCreatedEvent* created) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_test_event();
  if (created) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(created));
    if (message_arena != submessage_arena) {
      created = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, created, submessage_arena);
    }
    set_has_created();
    test_event_.created_ = created;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc_services.storage.WatchChangesResponse.created)
}
void WatchChangesResponse::clear_created() {
  if (_internal_has_created()) {
    if (GetArenaForAllocation() == nullptr) {
      delete test_event_.created_;
    }
    clear_has_test_event();
  }
}
void WatchChangesResponse::set_allocated_removed(::grpc_services::storage::ItemRemovedEvent* removed) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_test_event();
  if (removed) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(removed));
    if (message_arena != submessage_arena) {
      removed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, removed, submessage_arena);
    }
    set_has_removed();
    test_event_.removed_ = removed;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc_services.storage.WatchChangesResponse.removed)
}
void WatchChangesResponse::clear_removed() {
  if (_internal_has_removed()) {
    if (GetArenaForAllocation() == nullptr) {
      delete test_event_.removed_;
    }
    clear_has_test_event();
  }
}
void WatchChangesResponse::set_allocated_updated(::grpc_services::storage::ItemContentUpdatedEvent* updated) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_test_event();
  if (updated) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated));
    if (message_arena != submessage_arena) {
      updated = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updated, submessage_arena);
    }
    set_has_updated();
    test_event_.updated_ = updated;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc_services.storage.WatchChangesResponse.updated)
}
void WatchChangesResponse::clear_updated() {
  if (_internal_has_updated()) {
    if (GetArenaForAllocation() == nullptr) {
      delete test_event_.updated_;
    }
    clear_has_test_event();
  }
}
WatchChangesResponse::WatchChangesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_services.storage.WatchChangesResponse)
}
WatchChangesResponse::WatchChangesResponse(const WatchChangesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_test_event();
  switch (from.test_event_case()) {
    case kCreated: {
      _internal_mutable_created()->::grpc_services::storage::ItemCreatedEvent::MergeFrom(from._internal_created());
      break;
    }
    case kRemoved: {
      _internal_mutable_removed()->::grpc_services::storage::ItemRemovedEvent::MergeFrom(from._internal_removed());
      break;
    }
    case kUpdated: {
      _internal_mutable_updated()->::grpc_services::storage::ItemContentUpdatedEvent::MergeFrom(from._internal_updated());
      break;
    }
    case TEST_EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.WatchChangesResponse)
}

inline void WatchChangesResponse::SharedCtor() {
clear_has_test_event();
}

WatchChangesResponse::~WatchChangesResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.WatchChangesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WatchChangesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_test_event()) {
    clear_test_event();
  }
}

void WatchChangesResponse::ArenaDtor(void* object) {
  WatchChangesResponse* _this = reinterpret_cast< WatchChangesResponse* >(object);
  (void)_this;
}
void WatchChangesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WatchChangesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WatchChangesResponse::clear_test_event() {
// @@protoc_insertion_point(one_of_clear_start:grpc_services.storage.WatchChangesResponse)
  switch (test_event_case()) {
    case kCreated: {
      if (GetArenaForAllocation() == nullptr) {
        delete test_event_.created_;
      }
      break;
    }
    case kRemoved: {
      if (GetArenaForAllocation() == nullptr) {
        delete test_event_.removed_;
      }
      break;
    }
    case kUpdated: {
      if (GetArenaForAllocation() == nullptr) {
        delete test_event_.updated_;
      }
      break;
    }
    case TEST_EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TEST_EVENT_NOT_SET;
}


void WatchChangesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.WatchChangesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_test_event();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WatchChangesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc_services.storage.ItemCreatedEvent created = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_created(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc_services.storage.ItemRemovedEvent removed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_removed(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc_services.storage.ItemContentUpdatedEvent updated = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WatchChangesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.WatchChangesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.ItemCreatedEvent created = 1;
  if (_internal_has_created()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::created(this), target, stream);
  }

  // .grpc_services.storage.ItemRemovedEvent removed = 2;
  if (_internal_has_removed()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::removed(this), target, stream);
  }

  // .grpc_services.storage.ItemContentUpdatedEvent updated = 3;
  if (_internal_has_updated()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::updated(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.WatchChangesResponse)
  return target;
}

size_t WatchChangesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.WatchChangesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (test_event_case()) {
    // .grpc_services.storage.ItemCreatedEvent created = 1;
    case kCreated: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *test_event_.created_);
      break;
    }
    // .grpc_services.storage.ItemRemovedEvent removed = 2;
    case kRemoved: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *test_event_.removed_);
      break;
    }
    // .grpc_services.storage.ItemContentUpdatedEvent updated = 3;
    case kUpdated: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *test_event_.updated_);
      break;
    }
    case TEST_EVENT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WatchChangesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WatchChangesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WatchChangesResponse::GetClassData() const { return &_class_data_; }

void WatchChangesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WatchChangesResponse *>(to)->MergeFrom(
      static_cast<const WatchChangesResponse &>(from));
}


void WatchChangesResponse::MergeFrom(const WatchChangesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.WatchChangesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.test_event_case()) {
    case kCreated: {
      _internal_mutable_created()->::grpc_services::storage::ItemCreatedEvent::MergeFrom(from._internal_created());
      break;
    }
    case kRemoved: {
      _internal_mutable_removed()->::grpc_services::storage::ItemRemovedEvent::MergeFrom(from._internal_removed());
      break;
    }
    case kUpdated: {
      _internal_mutable_updated()->::grpc_services::storage::ItemContentUpdatedEvent::MergeFrom(from._internal_updated());
      break;
    }
    case TEST_EVENT_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WatchChangesResponse::CopyFrom(const WatchChangesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.WatchChangesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchChangesResponse::IsInitialized() const {
  return true;
}

void WatchChangesResponse::InternalSwap(WatchChangesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(test_event_, other->test_event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata WatchChangesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_getter, &descriptor_table_grpc_5fservices_2fstorage_2fstorage_2eproto_once,
      file_level_metadata_grpc_5fservices_2fstorage_2fstorage_2eproto[29]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace storage
}  // namespace grpc_services
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc_services::storage::GetDriveRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::GetDriveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::GetDriveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::GetDriveResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::GetDriveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::GetDriveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::GetDrivesRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::GetDrivesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::GetDrivesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::GetDrivesResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::GetDrivesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::GetDrivesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::GetItemRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::GetItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::GetItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::GetItemResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::GetItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::GetItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::GetChildrenRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::GetChildrenRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::GetChildrenRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::GetChildrenResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::GetChildrenResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::GetChildrenResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::GetContentRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::GetContentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::GetContentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::GetContentResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::GetContentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::GetContentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::GetContentStreamRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::GetContentStreamRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::GetContentStreamRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::GetContentStreamResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::GetContentStreamResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::GetContentStreamResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::CreateDriveRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::CreateDriveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::CreateDriveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::CreateDriveResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::CreateDriveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::CreateDriveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::CreateItemRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::CreateItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::CreateItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::CreateItemResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::CreateItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::CreateItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::PutContentStreamRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::PutContentStreamRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::PutContentStreamRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::PutContentStreamResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::PutContentStreamResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::PutContentStreamResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::TruncateContentRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::TruncateContentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::TruncateContentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::TruncateContentResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::TruncateContentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::TruncateContentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::UpdateDriveRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::UpdateDriveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::UpdateDriveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::UpdateDriveResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::UpdateDriveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::UpdateDriveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::UpdateItemRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::UpdateItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::UpdateItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::UpdateItemResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::UpdateItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::UpdateItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::RemoveDriveRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::RemoveDriveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::RemoveDriveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::RemoveDriveResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::RemoveDriveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::RemoveDriveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::RemoveItemRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::RemoveItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::RemoveItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::RemoveItemResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::RemoveItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::RemoveItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::WatchChangesRequest* Arena::CreateMaybeMessage< ::grpc_services::storage::WatchChangesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::WatchChangesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_services::storage::WatchChangesResponse* Arena::CreateMaybeMessage< ::grpc_services::storage::WatchChangesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_services::storage::WatchChangesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
